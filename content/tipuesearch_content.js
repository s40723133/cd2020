var tipuesearch = {"pages": [{'title': 'WEEK1~5', 'text': '在這周將python版本更新至3.8.2，並且於直播開會中分出了各個任務的成員 \n week2 meeting \n \n \n week3 meeting \n \n \n', 'tags': '', 'url': 'WEEK1~5.html'}, {'title': '解釋亂數分組之程序', 'text': '1.random模組的應用 \n \n 參考資料: https://www.runoob.com/python/func-number-random.html \n \n \n 1.嘗試利用random.sample的方式抽出組別 \n 但是由於對python的不熟悉無法如願的打出有效的指令。 \n import random\n\n\nteam = (\'1\', \'2\', \'3\', \'4\', \'5\', \'6\', \'7\')\n\n\ndef f1():\n    # 方法一：（假設沒有重複元素）編立集合，將尚未選擇的元素组成新集合。\n    r1 = random.sample(team, 3)\n    r2 = []\n    for item in team:\n        if item not in r1:\n            r2.append(item)\n    print(\'result1: %s\' % random.sample(r2, 2))\n\n\ndef f2():\n    # 方法二：（假設沒有重複元素）使用集合 set，計算差集。\n    r1 = random.sample(team, 3)\n    r2 = tuple(set(team) - set(r1))\n    print(\'result2: %s\' % random.sample(r2, 2))\n\n\ndef f3():\n    # 方法三：（假設沒有重複元素）隨機選擇集合元素的下標，而不是元素值。\n    index_r1 = random.sample(range(len(team)), 3)\n    # r1 = [team[i] for i in index_r1]\n    remain_index = tuple(set(range(len(team))) - set(index_r1))\n    index_r2 = random.sample(remain_index, 2)\n    r2 = [team[i] for i in index_r2]\n    print(\'result3: %s\' % r2) \n \n 參考 https://segmentfault.com/q/1010000014061245 \n 2.利用random.shffle的方式洗出組別 \n import random\n#這邊我們從http://s1.mde.nfu.edu.tw:8000/?semester=1082&courseno=0767 抓取資料\ngroupList=[[\'40723104\', \'40723107\', \'40723114\', \'40723115\', \'40723118\', \'40723122\', \'40723123\', \'40723140\', \'40723149\', \'40723151\', \'40723153\', \'40723154\', \'40723155\', \'40623143\', \'40723108\', \'40723127\', \'40723132\', \'40723133\', \'40723137\', \'40723141\', \'40723143\', \'40723144\', \'40723147\', \'40723148\', \'40723150\', \'40723103\', \'40723110\', \'40723112\', \'40723120\', \'40723125\', \'40723126\', \'40723128\', \'40723130\', \'40723139\', \'40723142\', \'40723145\', \'40723146\', \'40423155\', \'40723101\', \'40723102\', \'40723106\', \'40723111\', \'40723119\', \'40723121\', \'40723124\', \'40723134\', \'40723135\', \'40723136\', \'40723138\']]\n #設定變數0\ngroup=groupList[0]\n#將group數列隨機排列\nrandom.shuffle(group)\n#列印數列\nprint(group)\n#列印數列(1~12)\nprint(group[0:12])\n#列印數列(13~24)\nprint(group[12:24])\n#列印數列(25~36)\nprint(group[24:36])\n#列印數列(37~49)\nprint(group[36:49]) \n 詳見第二組組員 https://s40723147.github.io/cd2020/content/%E4%BA%82%E6%95%B8%E5%88%86%E7%B5%84.html \n 補充說明 \n shuffle(洗牌) \n import random\n\nnumber_list = [7,14,21,28,35,42,49,56,63,70]\n\nprint("原始列表：",number_list)\n\nrandom.shuffle(number_list) #shuffle方法\n\nprint("第一次洗牌之後的列表：",number_list)\n\nrandom.shuffle(number_list)\n\nprint("第二次洗牌之後列出：",number_list)\n\n原始列表： [7, 14, 21, 28, 35, 42, 49, 56, 63, 70]\n\nfirst shuffle：之後的列表： [35, 28, 70, 14, 21, 63, 7, 49, 42, 56]\n\n第二次洗牌之後列出： [21, 7, 70, 28, 56, 14, 63, 42, 35, 49]\n\n\n\n原文網址：https://kknews.cc/code/z9vx6zg.html \n 我們可以從這了解到shuffle是一個將數列重新排列的方式 \n 接著我們利用 \n #列印數列\nprint(group)\n#列印數列(1~12)\nprint(group[0:12])\n#列印數列(13~24)\nprint(group[12:24])\n#列印數列(25~36)\nprint(group[24:36])\n#列印數列(37~49)\nprint(group[36:49]) \n 的方式可以以不重複的方法分出4組組員 \n 變數 \n 「變數」在處理資料上是非常重要的元素，它可以用來儲存我們要處理的資料，也可以用來儲存處理之後的資料，等到資料都處理完畢之後，可以隨時取出使用。 \n 其實，變數就是在電腦記憶體裡面的一個位置空間，早期的電腦是以記憶體的位置編號（如：00A0:FFEC這樣子的型式）來表示，但是這些數字對人來說沒有意義，所以在程式語言中才會以一些英文字元、數字元以及一些符號來代替某些位置，以方便我們在程式中使用。 \n \n week4~5 meeting \n \n 這周我們分配了翻譯工作 \n 我是負責翻譯機械設計過程 MechanicalDesignProcess 的一員 \n', 'tags': '', 'url': '解釋亂數分組之程序.html'}, {'title': 'WEEK6~9', 'text': '直播討論內容 \n 翻譯過程 \n 因為影片太長，所以只擷取一小段 \n \n', 'tags': '', 'url': 'WEEK6~9.html'}, {'title': 'WEEK10~14', 'text': 'week10 meeting \n https://drive.google.com/file/d/1Z1Sy1RxOChwe6yRICJ-dkrOe5UQMvveX/view \n google用戶登陸設置 \n \n 登錄到您的@gm帳戶 \n 連結到 https://console.developers.google.com \n 接受許可並創建Google API項目 \n 啟用Google +域API \n 在Google + Domain API憑據下，按CONFIGURE CONSENT SCREEN按鈕 \n 選擇內部或外部用戶類型並添加新的應用程序名稱 \n 在“ API和服務”下，進入“憑據”頁面 \n 為Web應用程序 創建“ \xa0 OAuth 2.0客戶端ID”類型的憑據 \n 授權的JavaScript來源： https：// localhost：8443 \n 授權的重定向URI： https：// localhost：8443 / login / google / \n 將您的客戶ID和客戶機密保存到oauth_gm.txt中 \n \n', 'tags': '', 'url': 'WEEK10~14.html'}, {'title': 'vrep可動四輪車模擬', 'text': '\n 創建出方形 大小自訂 \n  創建出圓筒(輪子) 大小自訂 \n  挑整圓筒位置及角度 \n  創建軸(馬達)將位置設定好 \n  將輪子拉至軸下方 \n  將軸拉至本體下方 \n  複製出剩下三個軸與輪子 \n  位置設定好後設定速度 \n 就可以開始模擬 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'vrep可動四輪車模擬.html'}, {'title': 'coppeliasim 導入模型並模擬', 'text': 'creat by 40723148 \n 模型由 40723147 繪製 \n 1.開啟 coppelia sim 點選 File >> Import >> Mesh... ，導入模型檔案(小組繪製模型為STL檔) \n 2.將導入的模型依照旗子母關係擺放 \n \n 3.新增節點，右鍵點選車輪 >> Add >> Joint >> Revolute \n \n 4.將Joint移動至輪胎與輪軸銜接處( 四顆輪胎都要做 ) \n \n 5.調整車子設定，在零件的圖示上 用左鍵快速點及兩下 >> 點選 show dynamic properties dialog >> 勾選 Body is respondable 和 Body is dynamic ( 車身和車輪 ) \n \n 6.調整Joint設定，在零件的圖示上 用左鍵快速點及兩下 >> 點選 show dynamic properties dialog >>\xa0勾選 Motor enabled 並給定 速度 \n \n 7.調整後按下star simulation 進行模擬 \n \n 對模型加入腳本並編寫程式進行控制 \n 1.對車身零件點右鍵 點選Add >> Associated scrip >> Non threated \n \n 2. 用左鍵快速點及兩下圖示 \n \n 於開啟的視窗即可開始編寫程式 \n \n', 'tags': '', 'url': 'coppeliasim 導入模型並模擬.html'}, {'title': 'Vrep虛擬主機設置', 'text': '1.先下載VirtualBoxrtualBox跟Ubuntu \n 2.將Ubuntu匯入 \n 3.設定網路 Host-Only -Only 啟動Ubuntu主機 \n 4.輸入密碼kmol2020登入，開啟LXTermial \n \xa0 \n', 'tags': '', 'url': 'Vrep虛擬主機設置.html'}, {'title': '用Ubuntu開啟CoppeliaSim', 'text': 'ls  ##查看內容物\n\ncd coppeliasim4_rev4\n\nls ##查看內容物\n\ncd CoppeliaSim_Edu_v4_0_0_Ubumtu18_04\n\nls-l\n\n./coppelaiSim.sh \n \n \n', 'tags': '', 'url': '用Ubuntu開啟CoppeliaSim.html'}, {'title': 'WEEK15~17', 'text': 'ipv6設定並連結上近端 \n cd /etc/apt/apt.conf.d\n\nsudo vi proxy.conf\n\n#密碼為kmol2020\n\n\ncd /etc/netplan\n\nsudo vi 00-installer-config.yaml\n\n  \n 打入 \n Acquire::http::Proxy "http://[2001:288:6004:17::XX]:3128"; \n esc :wq儲存 \n 進行更新 \n sudo apt update \n 進行ifconfig \n ifconfig\n\nsudo apt install net-tools\n \n 進入 /etc/netplan 並且更改00-installer-config.yaml內容 \n cd /etc/netplan\n\nsudo vi 00-installer-config.yaml \n 將內容改成 \n # This is the network config written by \'subiquity\'\nnetwork:\n    ethernets:\n        enpes3:\n            dhcp4: true\n            dhcp6: true\n            nameservers:\n                addresses:\n                    - 2001:b000:168::1\n    version: 2 \n 主機IP為 2001:288:6004:17:2020:1::71XX (末兩碼為自己座號) \n 客體IP 用ifconfig查詢 \n \n 進入cd2020pj1 \n 將wsgi.py的host都改成ifconfig查到客體IP \n 開啟近端 \n python3 wsgi.py\n \n 將ipv6位址填入2001:288:6004:17:2020:1::71XX(座號) \n \n 將防火牆及proxy關閉就能用自己的電腦連結', 'tags': '', 'url': 'WEEK15~17.html'}, {'title': 'CoppeliaSim', 'text': '\n \n \n CoppeliaSim用於快速算法開發，工廠自動化仿真，快速原型製作和驗證，機器人技術相關的教育，遠程監控，安全性雙重檢查以及數字孿生等。 \n \n \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'BubbleRob教程', 'text': '本教程將在設計簡單的移動機器人 BubbleRob 時嘗試介紹很多CoppeliaSim功能 。下圖說明了我們將設計的仿真場景： \n \n \n 由於本教程將跨越許多不同的方面，因此也請看看 其他教程 ，主要是 有關構建仿真模型 的 教程 。首先，重新啟動CoppeliaSim。模擬器顯示默認 場景 。我們將從 BubbleRob 的主體開始。 \n 我們使用[菜單欄->添加->基本形狀->球體]向場景中添加直徑為0.2的基本球體。我們將 X尺寸 項目調整為 0.2 ，然後點擊 確定 。默認情況下，創建的球體將顯示在可見層 1中，並且是動態且可響應 的 （因為我們已啟用“ \xa0 創建動態且可響應的形狀 \xa0 ”項）。這代表 BubbleRob的 身體會掉落，並且能夠對與其他可響應形狀的碰撞做出反應（由物理引擎模擬）。我們可以看到這是形狀動力學 ：項目 身體是可響應的 ， 身體是動態的 已啟用。我們開始仿真（通過工具欄按鈕，或在場景窗口中按<control-space>），然後復制並黏貼創建的球體（使用[菜單欄->編輯->複製所選對象]，然後[菜單欄->編輯->粘貼緩衝區]，或先按<control-c>，再按<control-v>）：這兩個球將對碰撞做出反應並滾動。我們停止模擬：重複的球體將自動刪除。可以在 模擬對話框中 修改此默認行為。 \n 我們還希望 BubbleRob的 主體可以被其他計算模塊（例如 最小距離計算模塊 ）使用。因此，如果尚未啟用，則在該形狀的 對象公共屬性中 啟用 Collidable ， Measurable ， Renderable 和 Detectable 。如果需要，我們現在還可以在 形狀屬性中 更改球體的視覺外觀。 \n 現在，我們在“ \xa0 平移” 選項卡上打開“ \xa0 位置”對話框 ，選擇代表 BubbleRob 身體的球體，然後為“ \xa0 沿Z” 輸入0.02 \xa0 。我們確保將 相對 項設置為 World 。然後，單擊 翻譯選擇 。這會將所有選定對象沿絕對Z軸平移2 cm，並有效地將我們的球體抬高了一點。在 場景層次結構中 ，我們雙擊球體的名稱，以便我們可以編輯其名稱。我們輸入 bubbleRob ，然後按Enter。 \n 接下來，我們將添加一個 接近傳感器， 以便 BubbleRob 知道它何時接近障礙物：我們選擇[菜單欄->添加->接近傳感器->圓錐類型]。在 方向 選項卡上的 方向對話框中 ，我們為 Y周圍 和 Z \xa0 周圍 輸入90 \xa0 ，然後單擊 旋轉選擇 。在 位置對話框 的“ \xa0 位置” 選項卡上，為 X坐標 輸入0.1 \xa0 。 Z坐標 為0.12 \xa0 。 現在，接近傳感器已相對於 BubbleRob的 身體正確定位。我們在 場景層次中 雙擊接近傳感器的圖標 打開 其屬性 對話框。我們單擊 顯示體積參數 以打開 接近傳感器體積對話框 。我們將 偏移量 調整為0.005， 角度 調整為30， 範圍調整 為0.15。然後，在 接近傳感器屬性中 ，單擊 顯示檢測參數 。這將打開 接近傳感器檢測參數對話框 。 如果距離小於 則取消選中 “不允許檢測” 項，然後再次關閉該對話框。在場景層次中，我們雙擊接近傳感器的名稱，以便我們可以編輯其名稱。我們輸入 bubbleRob_sensingNose 並按回車鍵。 \n 我們選擇 bubbleRob_sensingNose ，然後 按住 \xa0 Control鍵選擇 bubbleRob ，然後單擊[菜單欄->編輯->將最後一個選定的對象設為父對象]。這會將傳感器連接到機器人的身體。我們也可以拖 bubbleRob_sensingNose 到 bubbleRob 在場景層次。這就是我們現在擁有的： \n \n [接近傳感器連接到 bubbleRob的 身體] \n \n 接下來，我們將照顧 BubbleBub的 車輪。我們使用[菜單欄->文件->新場景]創建一個新場景。通常情況下，跨多個場景工作非常方便，以便可視化並僅對特定元素進行工作。我們添加一個尺寸為（0.08,0.08,0.02）的純原始圓柱體。至於 BubbleRob 的主體，如果尚未啟用，則在該圓柱的 對象公共屬性中 啟用 \xa0 Collidable ， Measurable ， Renderable 和 Detectable 。然後，將圓柱的絕對位置設置為（0.05,0.1,0.04），並將其絕對方向設置為（-90,0,0）。我們將名稱更改為 bubbleRob_leftWheel 。我們複製並粘貼滾輪，然後將復制的絕對Y坐標設置為-0.1。我們將副本重命名為 bubbleRob_rightWheel 。我們選擇兩個輪子，複製它們，然後切換回場景1，然後粘貼輪子。 \n 現在，我們需要為車輪添加 接頭 （或電動機）。我們單擊[菜單欄->添加->關節->旋轉]將旋轉關節添加到場景。在大多數情況下，將新對象添加到場景時，該對象將出現在世界的起源處。我們保持關節處於選中狀態，然後控制選擇 bubbleRob_leftWheel 。在 位置對話框 的“ \xa0 位置” 選項卡上，我們單擊“ \xa0 應用於”選擇 按鈕：這將關節定位在左輪的中心。然後，在“ \xa0 方向”對話框 的“ \xa0 方向” 選項卡上，執行相同的操作：這將關節與左輪 定向的方向 相同。我們將關節重命名為 bubbleRob_leftMotor 。現在，我們在場景層次中雙擊關節的圖標以打開 關節屬性 對話框。然後，單擊“ \xa0 顯示動態參數” 以打開 關節動力學屬性 對話框。我們 啟用電動機 ，並選中項目“ \xa0 目標速度為零時鎖定電動機” 。現在，我們對右馬達重複相同的過程，並將其重命名為 bubbleRob_rightMotor 。現在，我們將左輪連接到左馬達，將右輪連接到右馬達，然後將兩個馬達連接到 bubbleRob 。這就是我們所擁有的： \n \n [接近傳感器，電動機和車輪] \n \n 我們運行模擬，並註意到機器人向後倒下。我們仍然缺少與地板的第三個聯繫點。現在，我們添加一個小的滑塊（或腳輪）。在一個新場景中，我們添加一個直徑為0.05的純原始球體，並將其設置為 Collidable ， Measurable ， Renderable 和 Detectable （如果尚未啟用），然後將其重命名為 bubbleRob_slider 。我們在 形狀動力學屬性 中將 Material 設置為 noFrictionMaterial 。為了將滑塊與機器人的其餘部分牢固地鏈接在一起，我們使用[菜單欄->添加->力傳感器] \xa0 添加了 力傳感器對象 。我們將其重命名為 bubbleRob_connection 並將其上移0.05。我們將滑塊連接到力傳感器，然後復制兩個對象，切換回場景1並粘貼它們。然後，我們將力傳感器沿絕對X軸移動-0.07，然後將其安裝到機器人主體上。如果現在運行仿真，我們會注意到滑塊相對於機器人主體略微移動：這是因為兩個對象（即 bubbleRob_slider 和 bubbleRob ）都相互碰撞。為了避免在動力學模擬過程中產生奇怪的影響，我們必須通知CoppeliaSim兩個對像不會相互碰撞，我們可以通過以下方式進行此操作：在 shape dynamics屬性中 ，為 bubbleRob_slider 設置了 本地可響應蒙版 設置為00001111，對於 bubbleRob ，我們將 本地可響應掩碼 設置為11110000。如果再次運行仿真，我們會注意到兩個對像不再乾涉。這就是我們現在擁有的： \n \n [接近傳感器，電機，車輪和滑塊] \n \n 我們再次運行仿真，發現即使在電機鎖定的情況下， BubbleRob也會 輕微移動。我們還嘗試使用不同的物理引擎運行仿真：結果將有所不同。動態仿真的穩定性與所涉及的非靜態形狀的質量和慣性緊密相關。有關此效果的說明，請務必仔細閱讀 本 節和 該 節。現在，我們嘗試糾正這種不良影響。我們選擇兩個輪子和滑塊，然後在“形狀動力學”對話框中單擊3次 M = M * 2（用於選擇） 。結果是所有選定形狀的質量都將乘以8。我們對3個選定形狀的慣性進行相同的操作，然後再次運行仿真：穩定性得到了改善。在關節動力學對話框中，我們將兩個電機的 目標速度 都設置為50。我們運行模擬： BubbleRob 現在向前移動並最終掉下地面。我們將兩個電機的 目標速度 項都重置為零。 \n 對象 bubbleRob 是所有以後將形成 BubbleRob \xa0 模型的 對象 的基礎。我們將在稍後定義模型。同時，我們要定義代表 BubbleRob 的對象的集合。為此，我們定義了一個 集合對象 。我們單擊[菜單欄->工具->集合]以打開 集合對話框 。或者，我們也可以通過單擊相應的工具欄按鈕來打開對話框： \n \n \n 在集合對話框中，點擊 添加新集合 。一個新的集合對像出現在下面的列表中。目前，新添加的集合仍為空（未定義）。在列表中選擇了新的收藏項目後，在場景層次中選擇 bubbleRob ，然後在收藏對話框中單擊“ \xa0 添加 \xa0 ”。現在，我們的集合被定義為包含層次結構樹的所有對象（從 bubbleRob 對 像 開始）（集合的組成顯示在“ \xa0 組成元素和屬性” 部分）。要編輯集合名稱，請雙擊它，並將其重命名為 bubbleRob_collection 。我們關閉收集對話框。 \n 在此階段，我們希望能夠跟踪BubbleRob與任何其他對象之間的最小距離。為此，我們使用[菜單欄->工具->計算模塊屬性] \xa0 打開 距離對話框 。或者，我們也可以使用相應的工具欄按鈕打開計算模塊屬性對話框： \n \n \n 在距離對話框中，單擊 添加新的距離對象， 然後選擇一個距離對： [collection] bubbleRob_collection-場景中的所有其他可測量對象 。這只是添加了一個距離對象，該對象將測量集合 bubbleRob_collection （即該集合中的任何 可測量對象 ）與場景中任何其他可測量對象之間的最小距離。我們通過雙擊其名稱將距離對象重命名為 bubbleRob_distance 。我們關閉距離對話框。現在，當我們運行模擬時，我們將看不到任何區別，因為距離對象將嘗試測量（並顯示） BubbleRob 之間的最小距離段 以及場景中的其他任何可測量對象。問題在於，在此階段，場景中沒有其他可測量的對象（定義地板的形狀默認情況下已禁用其可測量的屬性）。在本教程的後續階段，我們將為場景添加障礙。 \n 接下來，我們將向 BubbleRob 添加一個 圖形對象 ，以顯示最小距離以上的距離，同時還顯示 BubbleRob 隨時間 的 軌跡。我們單擊[菜單欄->添加->圖]並將其重命名為 bubbleRob_graph 。我們將圖形附加到 bubbleRob ，並將圖形的絕對坐標設置為（0,0,0.005）。現在，通過在場景層次結構中雙擊其圖標來打開 圖形屬性 對話框。我們取消選中“ \xa0 顯示XYZ平面” ，然後單擊“ \xa0 添加新數據流”以進行記錄， 然後選擇“ \xa0 對象： 數據流類型的 絕對x位置 \xa0 ” \xa0 和“ \xa0 bubbleRob_graph” 用於 記錄 的 對象/項目 。 數據流記錄列表中 出現了一個項目。該項目是 bubbleRob_graph的 絕對X坐標的數據流（即，將記錄 bubbleRobGraph的 對象的絕對X位置）。現在，我們還想記錄y和z位置：我們以與上述類似的方式添加這些數據流。現在，我們有3個數據流，分別表示BubbleRob的x，y和z軌跡。我們將添加更多的數據流，使我們能夠跟踪我們的機器人與環境之間的最小距離：我們點擊 添加新的數據流記錄 ，並選擇 距離：段長度 的 數據流類型 ，並 bubbleRob_distance 用於 記錄 的 對象/項目 。在 數據流記錄列表中 ，我們現在將Data重命名為bubbleRob_x_pos，將Data0重命名為bubbleRob_y_pos，將Data1重命名為bubbleRob_z_pos，將Data2重命名為bubbleRob_obstacle_dist。 \n 我們在“ \xa0 數據流”記錄列表中 和“ \xa0 時間圖屬性” 部分中選擇 bubbleRob_x_pos ，取消選中“ \xa0 可見” 。我們對 bubbleRob_y_pos 和 bubbleRob_z_pos 都執行相同的 操作 。這樣，在時間圖中只能看到 bubbleRob_obstacle_dist 數據流。以下是我們應該擁有的： \n \n [圖形屬性] \n \n 接下來，我們將建立一個顯示 BubbleRob 軌蹟的 3D曲線 ：單擊 編輯3D曲線 打開 XY圖和3D曲線對話框 ，然後單擊 添加新曲線 。在對話框彈出打開，我們選擇 bubbleRob_x_pos 為 X-值 項， bubbleRob_y_pos 為 Y值 項， bubbleRob_z_pos 的 Z值 項目。我們將新添加的曲線從 Curve 重命名為bubbleRob_path。最後，我們檢查“ \xa0 相對於世界” 項目並將“ \xa0 曲線寬度” 設置為4： \n \n [3D曲線屬性] \n \n 我們關閉與圖有關的所有對話框。現在我們將一個電機 目標速度 設置為50，運行模擬，然後將看到 BubbleRob的 軌跡顯示在場景中。然後，我們停止仿真並將電動機目標速度重置為零。 \n 我們添加具有以下尺寸的純原始圓柱體：（0.1，0.1，0.2）。我們希望此圓柱體是靜態的（即不受重力或碰撞的影響），但仍會對非靜態的可響應形狀施加一些碰撞響應。為此，我們在 形狀動力學屬性中 禁用“ \xa0 主體是動態 的” \xa0 。我們也希望我們的汽缸是 \xa0 可碰撞 ， 可衡量的 ， 可渲染 和 檢測的 。我們在 對象的通用屬性中 執行此操作。現在，在仍然選擇圓柱體的情況下，我們單擊對象平移工具欄按鈕： \n \n \n 現在我們可以拖動場景中的任何點：圓柱體將跟隨運動，同時始終受到約束以保持相同的Z坐標。我們將圓柱複製並粘貼幾次，然後將其移動到 BubbleRob 周圍的 位置 （從頂部查看場景時執行該操作最方便）。在對象移動期間，按住Shift鍵可以執行較小的移動步驟。按住ctrl鍵可以在與 常規 方向正交的方向上移動。完成後，再次選擇相機平移工具欄按鈕： \n \n \n 我們將左馬達的 目標速度 設置為50並運行模擬：現在，圖形視圖顯示了到最近障礙物的距離，並且該距離段在場景中也可見。我們停止模擬並將目標速度重置為零。 \n 現在，我們需要完成 BubbleRob 作為 模型 定義。我們選擇模型庫（即對象 bubbleRob ），然後檢查項目 Object是模型庫， 並且 Object / model可以轉移或接受 對象 共有 屬性 中的 DNA ：現在有一個點畫框，它包圍了模型層次結構中的所有對象。我們選擇了兩個關節，即接近傳感器和圖形，然後啟用項目 “不顯示為內部模型選擇” ，然後在同一對話框中單擊“ \xa0 應用於選擇” ：模型邊界框現在忽略了兩個關節和接近傳感器。仍在同一對話框中，我們禁用 相機可見性圖層 2，並為兩個關節和力傳感器啟用 攝像機可見性層 \xa0 10：這有效地隱藏了兩個關節和力傳感器，因為默認情況下禁用第9-16層。我們可以隨時 修改整個場景的可見性層 。要完成模型定義，我們選擇視覺傳感器，兩個輪子，滑塊和圖形，然後啟用“ \xa0 選擇模型基礎” 項 ：如果現在嘗試在場景中的模型中選擇一個對象，則將選擇整個模型，這是一種將整個模型作為單個對象進行處理和操作的便捷方法。此外，這可以防止模型受到意外修改。仍然可以通過在按住Shift的情況下單擊選擇模型對象，或者通常在場景層次中選擇它們，從而在場景中選擇模型中的單個對象。最後，我們將模型樹折疊到場景層次中。這就是我們所擁有的： \n \n [ \xa0 BubbleRob 模型定義] \n \n 接下來，我們將在與 BubbleRob 接近傳感器相同的位置和方向上添加 視覺 傳感器。我們再次打開模型層次結構，然後單擊[菜單欄->添加->視覺傳感器->透視類型]，然後將視覺傳感器連接到接近傳感器，並將視覺傳感器的本地位置和方向設置為（0,0,0）。我們還確保視覺傳感器不可見，不是模型邊界框的一部分，並且如果單擊該模型，則會選擇模型。為了自定義視覺傳感器，我們打開 其屬性 對話框。我們將“ \xa0 遠裁剪平面” 項設置為1，將“ \xa0 分辨率x” 和“ \xa0 分辨率y”設置為 \xa0 項目分別為256和256。我們向場景中添加了一個浮動視圖，然後在新添加的浮動視圖上，右鍵單擊[彈出菜單->視圖->將視圖與選定的視覺傳感器關聯]（我們確保視覺傳感器在該過程中被選中）。 \n 我們通過單擊[菜單欄->添加->關聯的子腳本->非線程]將非線程子腳本附加到視覺傳感器。我們雙擊場景層次結構中視覺傳感器旁邊出現的小圖標：這將打開我們剛剛添加的子腳本。我們將以下代碼複製並粘貼到 腳本編輯器中 ，然後將其關閉： \n', 'tags': '', 'url': 'BubbleRob教程.html'}, {'title': 'Building a clean model tutorial(建構純模型)', 'text': "\n \n \n \n \n 本教程將指導您逐步構建機器人或任何其他項目的清晰仿真模型。為了具有美觀，快速顯示，快速仿真和穩定的仿真模型，這是一個非常重要的主題，也許是最重要的方面。 \n 為了說明模型的構建過程，我們將構建以下操縱器： \n \n [機械手模型] \n \n \n \n \n 建立可見的形狀 \n \n \n \n 在構建新模型時，首先，我們僅處理它的視覺方面：動態方面（其簡化，優化模型的不合理之處），關節，傳感器等將在以後階段進行處理。 \n 現在，我們可以使用[菜單欄->添加->基本形狀-> ...]在CoppeliaSim中直接創建基本形狀。這樣做時，我們可以選擇創建 純形狀或常規形狀 。純形將針對動態交互進行優化，也可以直接動態啟用（例如，跌落，碰撞，但是可以在以後禁用）。基本形狀將是簡單的網格，對於我們的應用程序，可能沒有足夠的細節或幾何精度。在這種情況下，我們的另一個選擇是從外部應用程序導入網格。 \n 從外部應用程序導入CAD數據時，最重要的是確保CAD模型不太重，即不包含太多三角形。此要求很重要，因為重型模型的顯示速度很慢，並且還會減慢以後可能使用的各種計算模塊（例如 最小距離計算 或 動力學 ）。以下示例通常是一事無成（即使我們會在後面看到，即使有方法可以簡化CoppeliaSim中的數據）： \n \xa0 \n \n [複雜的CAD數據（實體和線框）] \n \n 上面的CAD數據非常重：它包含許多三角形（超過47'000個），如果我們只在空的場景中使用單個三角形的實例，這是可以的。但是大多數時候，您將需要模擬同一機器人的多個實例，連接各種類型的抓手，並可能使這些機器人與其他機器人，設備或環境進行交互。在這種情況下，模擬場景可能很快變得太慢。通常，我們建議對不超過2萬個三角形的機器人進行建模，但是在大多數情況下，5 000至10 000個三角形也可以。記住：在幾乎所有方面，少即是好。 \n 是什麼使上述模型如此沉重？首先，包含孔和小細節的模型將需要更多的三角形面才能正確表示。因此，如果可能，請嘗試從原始模型數據中刪除所有的孔，螺釘，物體的內部等。如果您將原始模型數據表示為參數化曲面/對象，則在大多數情況下，選擇項目並刪除它們（例如在Solidworks中）通常很簡單。第二個重要步驟是以有限的精度導出原始數據：大多數CAD應用程序都允許您指定導出的網格的細節級別。當工程圖由大小對象組成時，分幾步導出對象可能也很重要。 \n CoppeliaSim當前支持以下CAD數據格式： OBJ ， STL ， DXF ， 3DS （僅Windows）和 Collada 。還支持 URDF ，但此處未 提及 ，因為它不是基於純網格的文件格式。 \n 現在，假設我們已按照上一節中所述應用了所有可能的簡化。導入後，我們可能最終仍然會留下一個過重的網格： \n \n [導入的CAD數據] \n \n 您會注意到整個機器人是作為單個網格導入的。稍後我們將看到如何對其進行適當劃分。還要注意導入的網格的方向錯誤：最好保持其方向不變，直到構建整個模型為止，因為如果在以後的階段中我們要導入與同一機器人相關的其他項目，它們將自動具有相對於原始網格的正確位置/方向。 \n 在此階段，我們可以使用多種功能來簡化網格： \n \n 自動網格劃分： 允許為未通過公共邊鏈接在一起的所有元素生成新形狀。這並不總是適用於選定的網格，但是總是值得一試的，因為與必須同時處理所有元素相比，處理網格元素可以為我們提供更多的控制權。可以通過[菜單欄->編輯->分組/合併->分割所選形狀]訪問該功能。有時，網格劃分會超出預期。在這種情況下，只需將邏輯上屬於一起的元素（即，具有相同的視覺屬性並且屬於同一鏈接的一部分）合併回一個單一形狀（[菜單欄->編輯->分組/合併->合併選定的形狀]）。 \n 提取凸包： 通過將其轉換為凸包來簡化網格。可以通過[菜單欄->編輯->將選擇變形為凸形]來訪問該功能。 \n 抽取網格： 減少網格中包含的三角形數量。可以通過[菜單欄->編輯->縮小所選形狀...]訪問該功能。 \n 刪除網格的內部： 允許通過刪除其內部來簡化網格。此功能基於 視覺傳感器 ，根據所選設置可能會或多或少地令人滿意。可以通過[菜單欄->編輯->提取選定形狀的內部]訪問該功能。 \n \n 沒有/可以應用上述功能的預定義順序（列表中的第一項除外，應始終首先嘗試該項），它在很大程度上取決於我們要簡化的網格的幾何形狀。下圖說明了應用於導入的網格的上述功能（假設列表中的第一項對我們不起作用）： \n \n [凸包，抽取網格並在內部提取] \n \n 請注意，凸包在現階段如何對我們沒有幫助。我們決定首先使用網格抽取功能，然後運行兩次該功能，以將三角形的數量總共除以50。完成後，我們提取簡化形狀的內部並將其丟棄。我們最終得到的網格總共包含2'660個三角形（原始導入的網格包含了136'000個三角形！）。形狀包含的三角形/頂點的數量可以在 形狀幾何對話框中 看到。對於整個機器人模型，2'660三角形是極少的三角形，因此視覺外觀可能會因此受到影響。 \n 在這一階段，我們可以開始將機器人劃分為單獨的鏈接（請記住，我們目前整個機器人只有一個形狀）。您可以通過兩種不同的方式執行此操作： \n \n 自動網格劃分： 此功能已在上一節中進行了描述，它將檢查形狀並為未通過公共邊鏈接在一起的所有元素生成新形狀。這並不總是可行，但總是值得嘗試的。可以通過[菜單欄->編輯->分組/合併->分割所選形狀]訪問該功能。 \n 手動網格劃分： 通過 三角形編輯模式 ，您可以手動選擇邏輯上不屬於邏輯的三角形，然後單擊“ \xa0 提取形狀” 。這將在場景中生成新形狀。完成該操作後，刪除選定的三角形。 \n \n 對於我們的網格，方法1可以正常工作： \n \n [網格劃分] \n \n 現在，我們可以進一步細化/簡化單個形狀。有時，如果改用凸包，形狀可能會看起來更好。有時，您將不得不反複使用上述幾種技術，以獲得所需的結果。以以下網格為例： \n \n [進口網] \n \n 上面形狀的問題是，由於其中包含孔，我們無法很好地簡化它。因此，我們必須通過 形狀編輯模式 採用更複雜的方法，在該 模式下 ，我們可以提取邏輯上屬於同一凸形子實體的單個元素。此過程可能需要進行多次迭代：我們首先提取3個近似凸元素。現在，我們忽略作為兩個孔的一部分的三角形。在形狀編輯模式下編輯形狀時，可以方便地切換 可見性圖層 ，以查看其他場景項所覆蓋的內容。 \n \n [步驟1] \n \n 我們最終得到三個形狀的總和，但是其中兩個將需要進一步改進。現在我們可以擦除作為孔的一部分的三角形。最後，我們分別提取3種形狀的凸包，然後將其與[菜單欄->編輯->分組/合併->合併所選形狀]合併在一起： \n \n [第2步] \n \n 在CoppeliaSim中，我們可以啟用/禁用每種形狀的邊緣顯示。我們還可以指定邊緣顯示時要考慮的角度。相似的參數是 陰影角 ，它指示形狀將在多方面顯示。這些參數以及其他一些參數（例如形狀 顏色 ）可以在 形狀屬性中 進行調整。請記住， 形狀有多種口味 。到目前為止，在本教程中，我們僅涉及簡單形狀：簡單形狀具有一組視覺屬性（即，一種顏色，一個陰影角度等）。如果合併兩個形狀，則結果將是一個簡單的形狀。您還可以對形狀進行分組，在這種情況下，每個形狀將保留其視覺屬性。 \n 在下一步中，我們可以合併邏輯上屬於一起的元素（如果它們屬於同一剛性元素，並且具有相同的視覺屬性）。然後，我們更改各種元素的視覺屬性。調整具有不同顏色和視覺屬性的幾種形狀的最簡便方法，如果我們使用特定的字符串來命名顏色，則以後可以輕鬆地以編程方式更改該顏色，即使該形狀是複合形狀的一部分。然後，我們選擇所有具有相同視覺屬性的形狀，然後控制選擇已調整的形狀，然後單擊“ \xa0 應用於選擇” ，一次是“ \xa0 顏色” ，一次是 其他屬性 ，在 形狀屬性中 ：這會將所有視覺屬性轉移到選定的形狀（如果提供的話，包括顏色名稱）。我們最終得到17個單獨的形狀： \n \n [調整後的視覺屬性] \n \n 現在，我們可以使用[菜單欄->編輯->分組/合併->分組所選形狀]對屬於同一鏈接的形狀進行分組。我們最終得到7個形狀：機器人的基礎（或機器人的層次結構樹的基礎）和6個移動鏈接。正確命名對像也很重要：您可以通過雙擊 場景層次結構中 的對象名稱來做到這一點。基礎應該始終是機器人或模型名稱，其他對象應始終包含基礎對象名稱，例如： robot （base）， robot_link1 ， robot_proximitySensor 等。通過默認，形狀將分配給可見性層1，但是可以可以更改 對象的通用屬性 。默認情況下，僅 場景的可見性層1-8被激活 。現在，我們有以下內容（模型 ResizableFloor_5_25 在 模型屬性對話框中 暫時不可見）： \n \n [構成機器人的各個要素] \n \n 創建或修改形狀時，CoppeliaSim將自動設置其參考框架的位置和方向。形狀的參考框架將始終位於形狀的幾何中心。將選擇框架方向，以便形狀的邊界框保持盡可能小。這並不總是看起來不錯，但是我們隨時可以隨時調整形狀的參考框架的方向。現在，我們可以使用[菜單欄->編輯->重定向邊界框->使用世界參考框架]重新調整所有已創建形狀的參考框架。您可以在 形狀幾何對話框中 有更多選項來重新定向參考系。 \n \n \n \n \n 建立關節 \n \n \n \n 現在，我們將照顧關節/馬達。大多數時候，我們知道每個關節的確切位置和方向。在這種情況下，我們只需使用[菜單欄->添加->關節-> ...]添加關節，然後可以通過 位置對話框 和 方向對話框 更改它們的位置和方向。在其他情況下，我們只有Denavit-Hartenberg（即DH）參數。在這種情況下，我們可以通過 Models / tools / Denavit-Hartenberg聯合creator.ttm中 的工具模型來構建關節。 ，在模型瀏覽器中。有時，我們沒有關於關節位置和方向的信息。然後，我們需要從導入的網格中提取它們。讓我們假設這是我們的情況。無需處理修改過的，更近似的網格，而是打開一個新場景，然後再次導入原始CAD數據。大多數時候，我們可以從原始網格中提取網格或基本形狀。第一步是細分原始網格。如果這不起作用，我們通過 三角形編輯模式進行 。假設我們可以劃分原始網格。現在，我們可以檢查較小的對象。我們正在尋找旋轉形狀，可以用作在其位置以相同方向創建關節的參考。首先，刪除所有不需要的對象。有時在多個打開的場景中工作也很有用，以便於可視化/操作。在我們的案例中，我們首先關注機器人的基座：它包含一個圓柱體，該圓柱體的第一個關節的位置正確。在三角形編輯模式下，我們有： \n \n [機器人基礎：法線和三角形編輯模式可視化] \n \n 我們通過 頁面選擇器 \xa0 工具欄按鈕 更改相機視圖，以便從側面查看對象。所述 擬合到視圖工具欄按鈕 可以派上用場正確幀在版的對象。然後，我們切換到 頂點編輯模式， 並選擇屬於上光盤的所有頂點。請記住，通過打開/關閉某些 層 ，我們可以隱藏場景中的其他對象。然後我們切換回三角形編輯模式： \n \n [選擇的上光盤，頂點編輯模式（1和2），三角形編輯模式（3）] \n \n 現在我們單擊“ \xa0 提取圓柱體” （在這種情況下，“ \xa0 提取形狀” 也將起作用），這只是根據選定的三角形在場景中創建了圓柱體形狀。我們離開編輯模式，放棄更改。現在，通過[菜單欄->添加->關節->旋轉]添加旋轉關節，使其保持選中狀態，然後控制選擇提取的圓柱形狀。在 位置對話框 的“ \xa0 位置” 選項卡上，單擊“ \xa0 應用於選擇” ：這基本上將圓柱體的x / y / z位置複製到關節。現在兩個位置都相同。在“ \xa0 方向”對話框 的“ \xa0 方向” 選項卡上，我們還單擊“ \xa0 應用於選擇” ：現在，所選對象的方向也相同。有時，我們將需要圍繞其自身的參考框架額外旋轉關節90/180度，以獲得正確的方向或旋轉方向。如果需要，我們可以在該對話框的“ \xa0 旋轉” 選項卡上執行此操作（在這種情況下，請不要忘記單擊“ \xa0 自有框架” 按鈕）。同樣，我們也可以沿關節的軸移動關節，甚至進行更複雜的操作。這就是我們所擁有的： \n \n [在正確的位置，以正確的方向接合] \n \n 現在，我們將關節複製回我們的原始場景並進行保存（不要忘記定期保存您的工作！撤消/重做功能很有用，但不能保護您免受其他不幸事件的影響）。我們對機器人中的所有關節重複上述過程，然後重命名它們。我們還將使所有關節的 關節屬性 稍長一些，以便查看所有 關節 。通過默認，關節將分配給可見性層2，但可以在 對象的公共屬性中 進行更改。現在，我們將所有關節分配給可見性層10，然後 為場景 臨時 啟用可見性層10， 以使這些關節也可視化（默認情況下，僅激活場景的可見性層1-8）。這就是我們所擁有的（模型 ResizableFloor_5_25 在 模型屬性對話框中 暫時不可見）： \n \n [接頭配置正確] \n \n 至此，我們可以開始構建模型層次結構並完成模型定義。但是，如果我們希望 動態啟用 \xa0 opur機器人，則還有一個額外的中間步驟： \n \n \n \n \n 建立動態形狀 \n \n \n \n 如果我們希望 動態啟用 機器人，即對碰撞，跌落等做出反應，那麼我們需要適當地創建/配置形狀：形狀可以是： \n \n 動態或靜態： 動態（或非靜態）形狀會掉落並受到外力/扭矩的影響。另一方面，靜態（或非動態）形狀將保持不變，或跟隨其父級在場景層次中的移動。 \n 可響應或不可響應 ：可響應形狀會引起與其他可響應形狀的碰撞反應。如果它們是動態的，它們（和/或它們的對撞機）的運動將受到影響。另一方面，不負責任的形狀如果與其他形狀發生碰撞，則不會計算碰撞響應。 \n \n 以上兩點都說明 這裡 。負責任的形狀應盡可能簡單，以實現快速穩定的仿真。物理引擎將能夠以不同的速度和穩定性模擬以下5種類型的形狀： \n \n 純形狀 ： 純形狀將穩定並由物理引擎非常有效地處理。缺點是純形狀的幾何形狀受到限制：主要是長方體，圓柱體和球體。如果可能的話，將其用於與其他物品接觸時間較長的物品（例如，人形機器人的腳，串行操縱器的底座，抓手的手指等）。可以使用[菜單欄->添加->基本形狀]創建純形狀。 \n 純複合形狀 ： 純複合形狀是幾個純形狀的組合。它的性能幾乎與純形狀一樣，並具有相似的特性。可以通過對幾個純形狀進行分組來生成純複合形狀[菜單欄->編輯->分組/合併->分組所選形狀]。 \n 凹凸形狀 ：凸起的形狀會有點不太穩定，並採取一點點計算時間時通過物理引擎來處理。與純形狀相比，它允許使用更通用的幾何形狀（僅要求：它必須是凸形的）。如果可能，將凸形用於偶爾與其他物品接觸的物品（例如，機器人的各個鏈接）。可以使用[菜單欄->添加->選擇的凸包]或[菜單欄->編輯->將選擇變形為凸形]生成凸形。 \n 複合凸形狀或凸分解形狀 ：凸分解形狀是幾個凸形狀的組合。它的性能幾乎與凸形相同，並具有相似的特性。可以通過將多個凸形分組[菜單欄->編輯->分組/合併->分組選定的形狀]，並使用[菜單欄->添加->選擇的凸分解...]來生成凸分解形狀。 ]，或使用[菜單欄->編輯->將選擇變形到其凸分解...]。 \n 隨機形狀 ：隨機形狀是既非凸形也不是純淨的形狀。它通常具有較差的性能（計算速度和穩定性）。盡量避免使用隨機形狀。 \n \n 因此，優先順序為：純形狀，純複合形狀，凸形，複合凸形，最後是隨機形狀。確保還閱讀 此頁面 。對於要構建的機器人，我們將其基座設為純圓柱體，將其他鏈接設為凸形或凸形分解形狀。 \n 我們也可以將動態啟用的形狀用作機器人的可見部分，但是看起來可能不夠好。因此，相反，我們將為在 本教程第一部分中 創建的每個可見形狀構建一個動態啟用的副本，該副本將保持隱藏狀態：隱藏部分將代表動態模型，並由物理引擎專用，而可見部分將用於可視化，還用於 最小距離計算 ， 接近傳感器檢測 等。 \n 我們選擇對像 機器人 ，將其複制並粘貼到新場景中（以保持原始模型不變），然後啟動 三角形編輯模式 。如果對像 機器人 是複合形狀，我們首先必須將其取消分組（[菜單欄->編輯->分組/合併->取消選定形狀的分組]），然後合併各個形狀（[菜單欄->在啟動三角形編輯模式之前，請編輯->分組/合併->合併選定的形狀]）。現在，我們選擇代表電源線的幾個三角形，並將其刪除。然後，選擇該形狀中的所有三角形，然後單擊“提取圓柱體”。現在我們可以離開編輯模式，我們的基礎對象表示為純圓柱體： \n \n [純圓柱體生成過程，在三角形編輯模式下] \n \n 我們將新形狀（在 場景層次結構中 雙擊其名稱）重命名為 robot_dyn ，將其分配給可見性層9，然後將其複製到原始場景。其餘鏈接將建模為凸形或複合凸形。現在，我們選擇第一個移動鏈接（即對象 robot_link1 ），並使用[菜單欄->添加->選擇的凸包]從中生成凸形。我們將其重命名為 robot_link_dyn1 並將其分配給可見性層9。當提取凸包沒有保留足夠的原始形狀細節時，您仍然可以從其組成元素中手動提取多個凸包，然後將所有凸包與[菜單欄- >編輯->分組/合併->分組選定的形狀]。如果這似乎有問題或很耗時，則可以使用[菜單欄->添加->選擇的凸分解...]自動提取凸分解的形狀： \n \n [原始形狀和凸形吊墜] \n \n \n [原始形狀和凸形分解形狀吊墜] \n \n 現在，我們對所有剩餘的機器人鏈接重複相同的過程。完成後，我們將每個可見的形狀附加到其相應的不可見的動態吊墜上。為此，我們先選擇可見的形狀，然後按住Control鍵並單擊以選擇其動態吊墜，然後選擇[菜單欄->編輯->將最後選擇的對象設為父對象]。通過將可見形狀拖動到 場景層次 中的動態吊墜上，可以達到相同的結果： \n \n [可見的形狀附加到動態吊墜上] \n \n 我們仍然需要注意一些事項：首先，由於我們希望動態形狀僅對物理引擎可見，而對其他計算模塊不可見，因此在 對象通用屬性中 取消選中動態形狀的所有 對象特殊屬性 。。 \n 然後，我們仍然必須將動態形狀配置為 dynamic 和 responseable 。我們在 形狀動力學屬性中 執行此操作。首先選擇基本動態形狀（即 robot_dyn ），然後檢查“ \xa0 主體”是否為可響應 項。啟用前四個“ \xa0 本地可響應掩碼” 標誌，並禁用後四個“ \xa0 本地可響應掩碼” 標誌：對於連續的可響應鏈接不要彼此衝突非常重要。對於機器人中的第一個移動動態鏈接（即 robot_link_dyn1 ），我們還啟用了“ \xa0 身體可響應” 項，但是這次我們禁用了前四個“ \xa0 本地可響應”掩碼 標誌，並啟用最後4個 本地可響應掩碼 標誌。我們對所有其他動態鏈接重複上述過程，同時始終交替使用 Local Responsible Mask 標誌：一旦定義了模型，則連續的機器人動態形狀在彼此交互時不會產生任何碰撞響應。嘗試始終以這樣一種構造結束：機器人的動態基礎和機器人的動態最後一個鏈接僅啟用了前4個“ \xa0 本地可響應掩碼” 標誌，以便我們可以將機器人附加到移動平台，或附加一個抓取器連接到機器人的最後一個動態鏈接，而沒有動態碰撞干擾。 \n 最後，我們仍然需要將動態形狀標記為 Body is dynamic 。我們也在 形狀動力學屬性中 執行此操作。然後，我們可以手動輸入質量和慣性張量屬性，或者通過單擊“ \xa0 計算選定凸形的質量和慣性屬性”來 自動計算（推薦）那些值。還請記住 這一點 以及 該 動態設計注意事項。機器人的動態基礎是一個特例：大多數情況下，我們需要機器人的基礎（即 robot_dyn ）為非動態（即靜態），否則，如果單獨使用，則機器人可能會在運動過程中掉落。但是，一旦我們將機器人的底座連接到移動平台上，我們就希望底座變得動態（即非靜態）。我們通過啟用“ \xa0 如果獲取父 項時 設置為動態” 項，然後禁用“ \xa0 主體為動態項” \xa0 來 做到這一點。現在運行仿真：除了機器人的基座之外，所有動態形狀都應下降。附加的視覺形狀將跟隨其動態吊墜。 \n \n \n \n \n 型號定義 \n \n \n \n 現在我們準備定義模型了。我們從建立模型層次結構開始：通過選擇 robot_link_dyn6 ，然後控制選擇 robot_joint6 ，然後選擇[菜單欄->編輯->使最後一個選中的對象，將最後一個動態機器人鏈接（ robot_link_dyn6 ）附加到其相應的關節（ robot_joint6 ）。父母]。我們也可以做這一步通過簡單的拖動對象 robot_link_dyn6 到 robot_link6 在 場景層次 。現在，我們將 robot_joint6 附加到 robot_link_dyn5上 ，依此類推，直到到達機器人的底部。現在，我們具有以下場景層次結構： \n \n [機器人模型層次結構] \n \n 為模型庫起一個簡單的名字是很好而且更合乎邏輯的，因為模型庫也將代表模型本身。因此，我們將 robot 重命名為 robot_visibleBase ，並將 robot_dyn 重命名為 robot 。現在，我們選擇層次結構樹的基礎（即對像 機械手 ），並在 對象公共屬性中 啟用“ \xa0 對象為模型基礎” 。我們還使 對象/模型可以轉移或接受DNA 。出現了一個模型包圍盒，包圍了整個機器人。但是，邊界框似乎太大：這是因為邊界框還包含了不可見的項，例如關節。現在，通過對所有關節啟用 “不顯示為內部模型”選擇 項，將關節從模型邊界框中排除。我們可以對模型中的所有不可見項執行相同的過程。這也是一個有用的選項，可以將大型傳感器或其他項目也排除在模型邊界框之外。我們現在有以下情況： \n \n [機器人模型邊界框] \n \n 現在，我們保護模型免受意外修改。我們選擇機器人中所有可見的對象，然後啟用“ \xa0 選擇模型的基礎” ：如果現在單擊場景中的可見鏈接，則會改為選擇機器人的基礎。這使我們可以像對待單個對像一樣操作模型。我們仍然可以通過按住Shift鍵並單擊場景或在場景層次中選擇對象來選擇機器人中的可見對象。現在，我們將機器人置於正確的默認位置/方向。首先，我們將當前場景保存為參考（例如，如果稍後需要在當前機器人上導入具有相同方向的CAD數據）。然後我們選擇模型並 修改其位置/方向 適當地。將模型（即其基礎對象）放置在X = 0和Y = 0處被認為是一種好習慣。 \n \n [默認配置下的機器人型號] \n \n 現在我們運行模擬：由於默認情況下關節不受控制，因此機器人將崩潰。 在上一階段添加關節時 ，我們以力/扭矩模式創建了關節，但其電動機或控制器已禁用（默認情況下）。現在，我們可以根據需要調整關節。在我們的案例中，我們希望為每個控制器都提供一個簡單的PID控制器。在關節動態屬性中，單擊“ \xa0 啟用電動機” 並調整 最大扭矩 。然後，我們點擊 啟用了控制環， 然後選擇 位置控制（PID） 。現在，我們再次運行仿真：機器人應保持其位置。嘗試切換當前的物理引擎，以查看行為在所有受支持的物理引擎之間是否一致。您可以通過適當的 工具欄按鈕 ，或在 常規動力學屬性中執行此操作 。 \n 在仿真過程中，我們現在通過“ \xa0 動態內容可視化和驗證”工具欄按鈕來 驗證場景動態內容。現在，將僅顯示物理引擎考慮的項目，並且該顯示使用 顏色編碼 。這是 非常重要的 ，始終做到這一點，特別是當預期，為了快速調試模型動態模型不表現。同樣，在仿真過程中請始終查看場景層次：動態啟用的對象應在其名稱的右側顯示一個球形圖標。 \n \n [動態內容可視化和驗證] \n \n 最後，我們需要準備機器人，以便我們可以輕鬆地將抓取器連接到它，或輕鬆地將機器人連接到移動平台（例如）。可以通過兩種不同的方式將兩個動態啟用的形狀嚴格地彼此附加： \n \n 通過對它們進行分組 ：選擇形狀，然後單擊[菜單欄->編輯->分組/合併->對選定形狀進行分組]。 \n 通過通過力/扭矩傳感器進行連接 ： 力扭矩傳感器 還可以充當兩個單獨的動態啟用形狀之間的剛性鏈接。 \n \n 在我們的情況下，只有選項2是有意義的。我們使用[菜單欄->添加->力傳感器]創建一個力/扭矩傳感器，然後將其移動到機器人的尖端，然後將其附加到對象 robot_link_dyn6上 。我們會適當地更改其尺寸和外觀（紅色力/扭矩傳感器通常被視為可選的連接點，請檢查可用的各種機器人型號）。我們還將其名稱更改為 robot_attachment ： \n \n [附著力/扭矩傳感器] \n \n 現在，我們將抓取器模型拖到場景中，使其保持選中狀態，然後按住Control鍵並點按附件力傳感器，然後單擊“ \xa0 裝配/拆卸”工具欄按鈕 。夾持器到位： \n \n [附帶的抓爪] \n \n 抓具知道如何附加自身，因為它在模型定義期間進行了適當的配置。現在，我們還需要正確配置機器人模型，以便它將知道如何將自己附加到移動基座上。我們選擇機器人模型，然後在 對象公共屬性中 單擊“ \xa0 組裝 \xa0 ” \xa0 。為 “父項”匹配值 設置一個空字符串，然後點擊 設置矩陣 。這將記住當前基礎對象的局部轉換矩陣，並使用它相對於移動機器人的附著點定位/定向。為了驗證我們做的正確，我們拖動模型 Models / robots / mobile / KUKA Omnirob.ttm 進入現場。然後，選擇機器人模型，然後在移動平台上按住Control鍵並單擊其中一個附接點，然後單擊“ \xa0 組裝/拆卸”工具欄按鈕 。我們的機器人應該正確地將自己放置在移動機器人的頂部： \n \n [附帶的機器人] \n \n 現在，我們可以向機器人添加其他項目，例如傳感器。在某些時候，我們可能還希望將 嵌入式腳本 附加到我們的模型中，以便控制其行為或出於各種目的對其進行配置。在這種情況下，請確保了解 如何從嵌入式腳本訪問對象句柄 。我們還可以通過 插件 ， 遠程API 客戶端， ROS 節點， BlueZero 節點或 附加組件 來控制/訪問/接口模型。 \n 現在，確保已恢復在機械手和抓爪安裝過程中所做的更改，我們折疊了機械手模型的層次樹，選擇了模型的基礎，然後使用[菜單欄->文件->將模型另存為...]。如果我們將其保存在 模型 文件夾中，則該模型將在 模型瀏覽器中 可用。 \n \n \n \n \n \n", 'tags': '', 'url': 'Building a clean model tutorial(建構純模型).html'}, {'title': '機械設計過程', 'text': '來自 MechanicalDesignProcess.pdf \n 序章 \n Before we get started, let’s briefly define what we mean when we talk about an “electronic product.” It is a product that has a circuit board in it and usually has some input/output device such as an LCD. Examples of electronic products include cell phones, digital cameras, and the ultrasonic toothbrush. \n 在開始之前，我們先簡單地定義當我們談論一個“電子產品”時，它代表的是其中裝有電路板的產品，通常具有一些輸入/輸出設備，例如LCD。電子產品的例子包括手機、數位相機、超聲波牙刷。 \n An electronic product enclosure is the item that surrounds and supports the circuit board. The enclosure is what makes the device usable to the consumer. The enclosure is necessary for a number of reasons – to protect the electronics (the circuit board and LCD) from the environment or from a physical jolt (such as dropping the product). \n \xa0 電子產品外殼是包圍並支撐電路的物件。外殼能讓消費者使用這個產品。外殼 的樣子來自各種原因，但是最必要的是保護電子設備（電路板和LCD），防止電子設備板從環境或物理顛簸（例如掉落產品）損毀。 \n The enclosure provides access to input information to the device, via keys or buttons\xa0 perhaps, and allows information to be transferred from the device. The enclosure \xa0 provides structure so that the circuit board logic is supported and protected. \n Examples of some very effective product enclosures that have been developed inrecent years are the Apple iPhone 7 or the HP Spectre laptop computer (both, circa 2016). \n \xa0 機盒可通過按鍵或按鈕訪問設備的輸入信息也許，並允許從設備傳輸信息。外殼提供結構，以便支持和保護電路板邏輯。近年來出現的是Apple iPhone 7或HP Spectre筆記本電腦（兩者都是在2016年的產品）都是已開發出一些非常有效的產品外殼的案例。 \n In essence, a successful design of an enclosure will be the one in which the design has conformed to the product’s written specification (spec) and has been done within the cost and time parameters that were set. \n 從本質上講，一種成功的外殼設計將是設計已符合產品的書面規格（spec），並且能在設定的成本和時間參數內完成。 \n 1.1 Design Guide \n 1-1設計指南 \n Let’s break down some of the words of the above sentence for further definition (with the word “successful” defined in its own subtopic). \n \n \xa0 讓我們分解上面句子中的一些詞以進一步定義何謂成功 \n Electronic Product Enclosure (EPE = Electronic Product Enclosure) \n 電子產品外殼（EPE =電子產品外殼） \n The electronic product enclosure consists of both the external and internal structural elements of a product. It includes any of the hardware used for user interfacing, any of the connectors used to interface cables, and any elements that the user will physi- cally feel and see. Many electronic enclosures contain one or more PCBA (PrintedCircuit Board Assemblies), and these must be protected against the rigors of normal usage. \n \xa0 電子產品外殼是由內部和外部結構所組成的要素。它包括用於使用者使用的的任何硬件，以及用於連接電纜的連接器以及用戶所有接觸與看到的物件。 \xa0 許多電子機箱包含一個或多個PCBA（印刷電路板組件），外殼也必須保護它們使它們正常運作。 \n An enclosure could be very simple or be extremely complicated with thousands of separate parts. One of the designer’s first tasks will be to define the “system” that they are designing, and that is covered in a later chapter. \n \xa0 外殼可以非常簡單，也可以非常複雜，也可以由數千個外殼組成。設計人員的首要任務之一是定義“系統”，這將在下一章中介紹。 \n The term “enclosure” (in this text) will be on the less complicated end of the spectrum, and the methodology explained can be extended into the more complicated design situations. \n \xa0 術語“enclosure”（在該文中）將處於較為簡單的範圍內，其方法是可以解釋到更複雜的設計情況。 \n The EPE Designer \n EPE設計師 \n This is the person responsible for the design of the enclosure for an electronic prod- uct. In many cases, it is a mechanical engineer, but it can be someone with a back- ground in mechanical engineering or who has the experience of the discipline. \n \xa0 負責設計電子產品外殼的人員，在很多情況下，它是機械工程師，但也可以是有知識背景的人或是具有機械工程專業或具有該學科經驗的人。 \n A\xa0 good EPE Designer will have the following characteristics: \n 一個優秀的EPE設計師將具有以下特徵： \n \n Ability to understand and conform to the product specification \n 理解並按照產品規格的能力 \n Be able to add to and help create the product specification \n 能夠添加或創建新的產品規格 \n Create inventive solutions to the problems presented by the product \n 為產品提出的問題創造新的解決方案 \n \n 1.2 Defining the Overall Team \n 1-2定位整體團隊 \n Characteristics of the overall team are that the team can be: 團隊可以是由下列特徵定位； \n \n Of a small or large size \n 團隊的規模 \n Located in one location or distributed worldwide \n 位於一個位置或分佈在不同區域 \n Limited in resources or have access to almost unlimited resources \n 資源有限或可以使用近乎無限的資源 \n In possession of the latest tools, or not \n 是否擁有最新工具 \n Motivated by a variety of reasons for accomplishing their goal \n 實現目標的動機 \n Varying in experience \n 是否擁有豐富的經驗 \n \n \xa0The entire engineering effort consists of an amalgam of design among several disciplines. These disciplines include: \n 整個工程工作包括多個設計項目。 這些項目包括： \n \n Electrical engineering \n 電機工程 \n Software and firmware engineering \n 軟件與固件工程 \n Mechanical engineering (including structural and thermal) \n 機械工程（包括結構學和熱學） \n Industrial engineering \n 工業工程 \n System engineering \n 系統工程 \n \n disciplines. Contemporary product design should bal-ance various trade-offs among all of the factors that go into the production releasedproduct. \n 現代的產品設計應該要平衡並且在所有因素之間進行各種權衡。 \n \n \xa0Marketing (Including Input from Sales) This organization is responsible for the product definition, that is, defining what the customer wants and what the product will be from the customer viewpoint. This “product definition” usually takes the form of a document that engineering will accept as the product requirements. Marketing also has the responsibility of overseeing how a particular product will fit into the overall product line of the company (or division of the company). \n \xa0市場行銷（包括來自銷售的投入）該組織負責產品的定位，即從客戶的角度定義客戶想要什麼以及產品是什麼。此“產品定義”通常以文檔型式讓工程組接收。 營銷還負責監督特定產品如何適應公司的整個產品線（或公司的部門）。 \n \n \xa0 \n The EPE Designer interacts with Marketing in the effort to define how the prod- uct will function, how that functionality will present itself to the customer (user interface), and how the product will look to the customer (industrial design). \n EPE設計人員與市場營銷部門需要進行互動，以定義產品如何運作，該功能如何向客戶展示（用戶界面）以及對客戶呈現的產品外觀（工業設計）。 \n Operations (Manufacturing) This organization is responsible for the complete flow of materials for individual components and how those individual components get fabricated, assembled, and delivered to the customer. If engineering’s responsibility is to produce the product documentation, operations should be able to take that documentation and get that product produced that meets the product specifications. \n \n \xa0 製造組(營運組)該組負責整個製造流程，以及如何獲得材料與製造這些組件，組裝並交付給客戶。工程組產出的文檔，操作人員應該要能夠照著文檔製造符合產品規格的產品。 \n \n The EPE Designer intersects with operations by making decisions on part fabri- cation techniques, vendor (supplier) selection, and any trade-offs between quality/cost/appearance. \n \xa0EPE設計人員需通過對製造零件的技術，向供應商在(質量/成本/外觀)之間做取捨來交給製造組製造。 \n Testing (Design Verification) This organization is responsible for testing both the prototyping and mature designs. This can be accomplished by resources within the mechanical design group (itself) or by an independent group setup for this particular function. \n \n \xa0測試組負責測試初始設計和最終設計。這部分可以直接通過機械設計組原有的的資源或為此設立特定測試功能的獨立組來完成。 \n \n \xa0 \n The EPE Designer intersects with the test function by either conducting or reviewing test results. The testing done on the product is actually a part of the prod-uct requirements document (PRD) and that it must be proven that the product passes testing as defined in that document. For example, if the PRD states that a product must survive a one meter drop, then a test must be defined that states considerations such as: \n \xa0EPE設計師通過執行或查看測試結果來檢測功能。在產品上進行的測試實際上是產品需求文檔（PRD）的一部分，並且必須證明該產品通過了該文檔中定義的測試。例如，如果PRD聲明產品必須承受一米高的跌落，則必須定義一項說明注意事項的測試如： \n 1. How many drops of a single item (under test) 2.Impact faces or corners of that item 3.Environment that testing is to take place (such as ambient temperature) 4.Statistical concerns (such as how many single items must pass testing) 5.Order of testing (among various tests that unit will undergo) 6.Definition of “survive” (degree of functionality or appearance after test) \n \n 每一個物品多少滴 \n 該物品的撞擊面或角 \n 進行測試的環境（例如環境溫度) \n 統計問題（例如必須通過測試的單個項目數量) \n 測試順序（單元將進行的各種測試的順序） \n “測試通過”的定義（測試後功能或外觀的程度） \n \n \n \xa0Quality Control/Quality Assurance This organization determines whether the acceptability limits of the individual parts (or entire assemblies) meet the standards both specified in the individual product specification (the drawing) and in the estab-lished overall corporate standards. Quality control would be concerned with tactical situations, while (corporate) quality assurance would be more concerned with stra-tegic situations.\xa0 \n 品保組確定單個零件是否在可接受最大公差，在單個產品規格（附圖）和已建立的總體公司標準中是否符合標準，品質控制是否與銷售戰術有關，而（公司）品質保證將與銷售戰術有關。 \n \n The EPE Designer intersects with this organization by specifying on their docu- mentation the acceptability limits of each part and can go all up to include assem- blies. Typically, acceptability limits take the form of: \n \xa0\xa0EPE設計人員通過文檔指定的每個零件的可接受性限制來與該組互動，並且將所有零件包括在內。 通常可接受性限制採取以下形式： \n 1.Size (geometry) control as specified in drawing tolerances 2.Material and plating specifications stated on drawing 3.Cosmetic flaw rejection criteria stated on drawing 4.Functional specification as stated on drawing 5.Determining the “critical” nature of some aspect of the part documentation. \n \n \n 圖紙指定的尺寸公差 \n \n \n 圖紙上註明的材料和鍍層規格 \n \n 圖紙上說明的外觀缺陷報廢標準 \n 如圖所示的功能規格 \n 確定零件文檔某些方面的“關鍵”性質 \n \n \n Service This organization is responsible for the repairing, warranty, and return of product functions. They help determine course of action for field problems with the equipment.\xa0  \n 服務組負責產品功能的維修，保修和退貨。它們有助於確任現場設備問題的解決方案。 \n \n The EPE Designer intersects with this organization by designing-in a reasonable process for the disassembly and repair of the product. Of course, a design with a designed-in high reliability will have less reason to repair. It’s also possible to pro- vide for methodology to determine misuse of the product. EPE設計師通過合理設計的過程來拆卸和維修產品，從而與此組織互動。 當然，可靠的設計將減少維修的理由。也可以找到濫用產品的問題。 Project Management This organization is responsible for tracking the project for: \xa0 項目管理組負責追蹤以下項目： 1.Time allocation – meeting deadlines that are committed 2.Resource allocation 3.Priority management (for a single project and relative to projects competing for the same resources) 4.Compliance to specifications for the product 5.Meeting cost goals 6.Reporting status of project \n \n \n 時間分配–遵守約定的最後期限 \n \n \n 資源分配 \n \n \n 優先管理（針對單個項目以及與之競爭的項目相同的資源） \n \n \n 符合產品規格 \n \n 達到目標成本 \n 項目報告情況 \n \n The EPE Designer intersects with this organization by reporting estimates of time and resources for all separate line items of the mechanical part responsibility.This starts with product conceptualization, design, prototyping, and testing and con-tinues on into final release documentation. Estimates of time and resources are updated as milestones are met. \n EPE設計師通過報告對EPE的估計與該組織互動， 負責機械零件的所有單獨行項目的時間和資源。 這來自於於產品的概念化，設計，原型設計和測試，以及後續的最終版本文檔。隨著里程碑的實現，時間和資源也會更新。 \n \n Upper Management Included in this group is anyone who is responsible for the project and has a need to understand the project. Project updates would be provided to this group at specific times during the project. Upper management would provide leadership and vision to the project. \n \n 高層管理組負責所有項目並需要了解該項目的所有人。 \n 項目更新將在項目期間的特定時間提供給該小組。 \n 高層管理人員將提供 對項目的領導力和遠見。 \n \n \n The EPE Designer intersects with upper management in an indirect manner. Reporting of project status is relevant at any time and is usually provided thru the project manager. EPE設計師通常以間接方式與高層管理人員互動。\n項目狀態的報告通常在任何時候都是通過專案經理。 \n \xa0 \n 1.3 Product Requirements \n 1-3產品需求 \n Determining success is a matter of meeting (or exceeding) the requirements of the project. This is a simple statement but is actually very complicated in its interrelated aspects. \n 成功是指能滿足或超過項目需求。 這是一個簡單 的陳述，但在協同設計的方面實際上卻非常複雜。 \n A project could be determined successful if it met its goals. These goals can be addressed in (one or more of) the following written documents. 如果項目達到了目標，則可以確定為成功。 這些目標可以通過以下一份或多項書面文件解決。 \n Product Requirements Document (PRD) This document can go by a variety of names (it will vary by company). Basically, it is a “contract” of sorts that attempts to specify the basic functionality of the product. It can be as simple as a few para- graphs or extremely complicated. It can contain: \n 產品需求文檔（PRD）該文檔可以有多種形式 名稱（因公司而異）。 基本上，“合約” 用來指定產品的基本功能。 它可以像幾個段落一樣簡單，也可以極其複雜。 它可以包含： \n (a) A description of what the product will accomplish for the customer – it usually does not specify exactly how the product will work. That is, details on “how to get there, from here” are not explicit. This description uses words on the “final outside appearance” of the product rather than the details of the “inner work-ings.” Follow-on documents (or specifications) can also specify details of the product. Again, the PRD forms an agreement between marketing and engineer-ing as to what the product will be. The PRD can vary in its content detail. It is (should be) updated, during the course of the project, as elements get revised or added to. At each overall product review, it should be compared on the extent of how the design is conforming to the PRD. \n (a) 產品將為客戶完成的描述–通常不會確切說明產品的工作方式。也就是說，關於“如何從這裡到達那裡”的細節並不明確。 該描述使用的是產品“最終外觀”上的形容文字，而不是“內部工作原理”的細節。後續文檔（或規格）也可以指定產品的詳細信息。 同樣，RPD會在市場營銷和工程師之間達成協議，關於產品將是什麼。 PRD的內容詳細信息可能有所不同。 在項目過程中，隨著元素的修訂或更新，（應該）進行更新並添加。在每次整體產品審查時，都應該在設計與PRD的符合程度上進行比較。 \n A description of how the product will interface with the customer. This would include: (b) 產品如何與客戶互動的說明。其中包括: \n \n How information is displayed to the customer or how the information will get from the customer, to the product. This can be visual, auditory, or tactile. \n 如何向客戶顯示信息或如何從客戶向產品獲取信息。這可能是視覺，聽覺或觸覺。 \n Various interfaces to the product, such as connectors, switches, or buttons. \n \n 產品的各種接口，例如連接器，開關或按鈕。 \n \n Labeling or icons intended to provide information to the customer. \n \n 用於向客戶提供信息的標籤或圖標 \n \n \n (c) A description of the various components of the product. That is, if the product (the product being designed) needs additional equipment or cables to function in a larger system, then a description of the various parts of the “system” will need to be described. Thus, one will need to “draw a boundary” around exactly what this product (being designed) is. What exactly is the “deliverable” to the customer? \n (c) 產品各種組 件的描述。也就是說，如果產品 （正在設計的產品）需要與其他設備連結才能在較大的系統中運行， 則需要對“系統”的各個部分進行描述 。因此，人們將需要圍繞著正在設計的產品的確切內容“劃界”。給客戶的“交付物”到底是什麼？ \n (d) Indication of the final aesthetic (visual appearance) of the product. Colors, tex- tures, and industrial design are usually very well-specified. \n (d) 指示產品外觀部分的最終美學。顏色、紋理和工業設計通常都非常詳細。 \n (e) A listing of the environments that the product will both operate and be stored in.This includes temperature, shock, drop, vibration, humidity, water egress pro- tection, shipping conditions, altitude, and specific corrosive atmospheres. \n (e) 產品將在其中運行和存儲的環境的清單，包括溫度，衝擊，跌落，振動，濕度，出水保護，運輸條件，海拔高度和特定的腐蝕性環境。 \n (f) A\xa0listing of any standards that the product will need to pass. This includes both safety and regulatory standards such as Underwriters Laboratory (UL) for safety, federal communication compliance (FCC) for electromotive magnetic interference (EMI), and the (literally) hundreds of other compliance standards that are a real part of today’s design world. Some of these standards are country specific, while others are accepted on a worldwide basis. Obviously, anything to do with medical, food, or children’s toys will have their own rigorous testing standards to pass. \n (f) 產品需要通過的所有測試的清單。這包括安全和監管標準，例如安全性保險性實驗室（UL），電磁干擾（EMI）的聯邦通信合規性（FCC）以及數百種其他合規性標準 這是當今設計界的重要組成部分。其中一些標準是針對特定國家/地區的，而另一些則在全球範圍內被接受。顯然，任何與醫療、食品或兒童玩具相關的，都必須通過自己的嚴格測試標準。 \n Internal Test Reports These indicate positive test results. These are the results of testing done to show that the requirements as set forth in the PRD have been passed.If the tests haven’t been passed, then there are action plans initiated to improve the product and conduct further testing. \n 內部測試報告這些表示測試結果的報告。這些是\n進行測試以表明已通過PRD中規定的要求。如果未通過測試，則將啟動行動計劃以改進\n產品並進行進一步測試。 \n Reports from Initial Customers This is “alpha” or “beta” testing where customer feedback is positive or negative. It is hoped that customers are gaining measureable value from the product. Reasonable improvements to the product can be made when this “real-world” feedback is available. “Alpha” testing is usually done with in- house personnel who are simulating the actual customer, while “beta” testing is usually done with existing customers before shipment to actual (paying) customers. 初始客戶的報告這是“alpha”或“ beta”測試，其中客戶反饋為正面或負面。希望客戶能衡量\n產品的價值。並且可以對產品進行合理的改進建議\n此反饋是可行的。“Alpha”測試通常使用內部人員在模擬實際客戶，而“ beta”測試是\n通常在發貨到實際（付款）之前與現有客戶進行測試。 Project Management Reports 項目管理報告 \n (a) On expenses (expected vs. actual). This includes expenses for salaries, capital equipment, tooling, etc. Monitoring of expenses can lead to analysis of the true “payback periods” of the project and better predictions on expenses for future projects. (a)支出（預期與實際）。這包括薪金，資本設備，工具等的支出。 對支出的監控可以便於\\對項目的真實“投資回報期”進行分析，並更好地預測未來項目的支出。 \n \xa0 (b) Status on milestone dates (expected vs. actual): as with expenses, monitoring of how well the project achieved its time commitments leads to an indication of the true “payback period” of the project. Analyzing where milestones were not met can lead to better predictions for future projects. \n (b) 里程碑日期的狀態（預期與實際的日期）：與支出一樣，監視項目完成其時間承諾的程度會指示出項目的真正“投資回報期”。 \n 分析未達到里程碑的位置可以為將來的項目提供更好的預測 Ongoing analysis of “success” (as the product matures in the field) can be mea- sured by: \n 可以通過以下方法來衡量“成功”的持續分析（隨著產品的成熟度）： Quality Assurance Reports These contain information about customer satisfaction and warranty returns: any issues or problems with the product must be quickly addressed so as to protect the company’s reputation in the industry. If revisions need to be made, they must be implemented with great urgency. Thus, if customer satis- faction reaches some set level of reliability, the product design team will have achieved success. \n \xa0 \n 質量保證報告包含有關客戶滿意度和保修退貨的信息：必須迅速解決產品的任何問題或問題，以保護公司在行業中的聲譽。 如果需要進行修訂，則必須立即執行。因此，如果客戶滿意度達到一定的可靠性水平，產品設計團隊才算是成功。 \n Analysis of “Lessons Learned” From all disciplines on the project: every project will contain items where things could have been done better. Continuous improvement should be strived for. There should be a way to gather feedback from everyone in the product design process on what items would need to be improved. This will enhance the success rate of future projects. More on this subject is presented in Chap. 13. 從項目的所有學科中分析“經驗教訓”：每個項目都將包含本可以做得更好的項目。應努力不斷改進。 應該要有一種方法可以收集產品設計過程中每個人有關需要改進哪些項目的反饋。這將提高未來項目的成功率。 \n \xa0 \n Sales Expected vs. actual. Sales figures can indicate the success of the project – in the sense that marketing has predicted the need for the product, engineering/opera- tions has delivered that product to the customer, and the customer does (indeed) value that product. Or, in the opposite case, sales can be less than expected (pre- dicted). This could have happened for a variety of reasons (such as): 預期銷售額與實際銷售額。銷售數字可以表明該項目的成功–從某種意義上說，市場營銷已經預測了對產品的需求， 工程/運營已將產品交付給客戶，而客戶確實（確實）對產品進行了估價。 在相反的情況下，銷售額可能會低於預期（預測）。發生這種情況可能有多種原因（例如）： \n \n Product is not (exactly) what the customer needed (price too high/performance features too low). \n 產品並沒有確切地滿足客戶的需求可能價格太高或是性能太低。 \n Product is too late out into the market, that is, it took too long to get the product out into the market, and the customers now have better choices. \n 產品太晚進入市場了，也就是說，將產品投入市場花費的時間太長，客戶已經有了更好的選擇。 \n Product is too early into the market (not enough “early adopters”). This happens when the technology of the product doesn’t match what customers (at the time) value or other supporting technology isn’t available as yet that would make this particular product fully useful. \n \n 產品進入市場太早（“參考者”不足）。 當產品的技術與當時（當時）客戶的價值觀不合或其他輔助技術不可用時， \n 就會發生這種情況，這將使該特定產品無法完全使用。 \n \n Low reliability. \n 可靠性低。 \n \n All of the above reasons should be placed in the “competitive arena.” That is, most products have competition in their markets. Customers will choose purchases based on their needs for performance, price, and quality. New technology solutions must compete against the older solutions. \n 以上所有原因都應放在“競爭舞台”上。也就是說，大多數產品在其市場中都有競爭。客戶將根據對性能，價格和質量的需求選擇購買。 新技術解決方案必須與舊解決方案競爭。 \n It would be rare to have all of the data available at product release to determine how “successful” the product design effort is. Product design usually has increased risk of success if: \n 產品發佈時很難獲得所有數據來確定產品設計工作的“成功”程度。 在以下情況下，產品設計通常會增加成功的風險： \n \n Milestone completion dates are unreasonably shortened. \n 里程碑完成日期被不合理地縮短了。 \n The design has a high content of brand new components. \n \n 該設計包含大量的全新組件。 \n \n Changes (additions) to the project occur at an unmanageable rate. \n 對項目的更改（添加）以難以控制的速度發生。 \n \n Successful design has been simply described as: \n 成功的設計簡單描述為： \n 1. Function to specification 2. Delivery on time to project schedule 3. Delivery at predicted costs \n \n 功能規格 \n 準時按計劃進度交付 \n 以預計的成本交貨 \n \n Of course, projects can exceed functionality, be delivered ahead of time, and perhaps be even at a lower cost. This would be cause for celebration (although some examination needs to go into why “actuals” didn’t match “predictables”). 當然，項目可能會超出功能，可能會提前交付，甚至成本更低。 這將是值得慶祝的原因（儘管需要進行一些檢查，以了解“實際情況”與“可預測因素”為何不匹配的原因）。 \n Behind the above “simple statements” for successful design is however some very large implications and that they are not so “simple.” Let me break down the above three variables a bit. All three are interrelated on several levels. 然而，在上述“成功設計的簡單陳述”的背後有一些\n影響很大，而且不是那麼“簡單”。讓我對以上三個變量進行一些分解。 這三個方面在幾個層面上相互關聯。 \n 1.3.1 Function to Specification \n 1-3-1功能規格 \n Specifications take many forms. They can be written documents, notes from a meet- ing, or even verbal instructions. The way that projects create specifications varies from company to company and indeed can vary within a company itself. Also, you, the particular Designer, can come in at various stages in an overall project. Therefore, there is no particular way that the work description can manifest itself to you, the EPE Designer. \n 規格有多種形式。它們可以是書面文件，會議記錄，甚至是口頭指示。 項目創建規格的方式因公司而異，實際上在公司內部也可能有所不同。 還有你特定的設計師可以進入整個項目的各個階段。 因此，沒有任何一種特定的方式可以使工作描述向EPE設計師展示。 \n Although the EPE Designer is not ultimately responsible for setting the full prod- uct requirements (in the specification), the designer’s input is critical. The EPEDesigner will be tasked with providing input as to just how far the limits of the design can go. For example, if the Product Requirements “arbitrarily” determine that the shock levels for the product are 40 g maximum, the EPE Designer must do some research (or some initial testing) as to exactly what shock level is possible or what levels have been achieved in the past. Therefore, the 40 g level is initially “proposed,” and the EPE Designer must agree to that level or put forth arguments for a different level. It may even be possible that higher g levels can be agreed to. Similarly, if cost targets in the Specification seem overly aggressive, the EPE Designer must do some “homework” on their portion of the budget that provides reasonable data back to the project specification. \n 儘管EPE設計人員最終不負責設置完整的產品要求，但設計人員的輸入極為重要。  EPE設計人員將負責提供有關設計限制可以走多遠的信息。 例如，如果“產品要求”“任意”確定產品的衝擊等級最大為40 g，則EPE設計人員必須對可能的衝擊等級進行一些研究（或一些初始測試），或者 過去達到了什麼水平。 因此，最初是“建議”使用40 g級別的，EPE設計者必須同意該級別或提出論點為不同的水平。 甚至可能會同意更高的g含量。同樣，如果規範中的成本目標似乎過於激進，EPE設計者必須在其預算部分中做一些“功課”，以向項目規範提供合理的數據。 \n The important item to concern the EPE Designer is with the writing down of a specification and the later agreement (formal or informal) among the various mem- bers of the project. For example, let us say that the general task is one of designing a removable Disk Drive Module. Here are some possible scenarios that lead to its “successful design.” \n EPE設計者需要關注的重要事項是寫下規格以及各成員之間的後來的協議。 例如，讓我們說一般的任務是設計可移動磁盤驅動器模塊之一。 這是導致其“成功設計”的一些可能情況。 \n Task (Example): Removable Disk Drive Module Scenario #1: Minimal Input (to the Designer) – The Beginnings of a Specification 任務（示例）：可移動磁盤驅動器模塊方案1：最少的輸入–規範的開始 \n This would mean progressing with the design without much more than verbal information (as given above). The designer would likely proceed to find out items that would affect the design such as: 這將意味著在進行設計時只需要口頭信息即可（如上所述），設計師可能會繼續找出會影響設計的項目。 例如： 1. How many times is the drive to be removed? Will it be just for maintenance or is it more like once a day to secure the data? 2. How large can the module be designed? 3. Is there an existing opening for the module (in the base unit)? 4. Is there a shock concern for the disk drive (what levels of shock)? 5. Will this module be used in other base units? \n \n 該驅動器要卸下多少次？它是要維護還是一天進行一次來保護數據？ \n 可以設計多大的模塊。 \n 模塊（在基本單元中）是否有現有的開口？ \n 磁盤驅動器是否有電擊問題（電擊的等級如何） \n 該模塊是否可以在其他基本單元中使用？ \n \n This document (again, you are creating the specification) can now be revised as often as necessary, each time with agreement of those persons concerned with the project (at this time). The document at this point does not have to be of any great length. It can be as terse as necessary, for example, in the example of the disk drive that we have started: \n 現在，每次在與項目有關的人員的同意下（此時），都可以根據需要對文檔（再次創建規範）進行必要的修訂。此時的文件不必像是其他任何文件 長度很長。例如，在我們啟動的磁盤驅動器示例中，它可以盡可能簡潔: \n Project: Disk Drive Module 項目：磁盤驅動器模塊 \n Author: (the designer ) \n 作者：（設計師） \n Revision Level: 1 (date) \n 修訂級別：1（日期） \n • Design requirements: \n •設計要求： \n 1.Disk Drive Module will function under a shock load of 20 g. 2.Disk Drive Module will survive a shock load of 100 g (nonoperating). 3.Ambient air near the Disk Drive Module will be 30 °C maximum (operating). \n \n 磁盤驅動器模塊將在20 g的衝擊負荷下運行。 \n 磁盤驅動器模塊將承受100 g的衝擊負載（不工作） \n \n 在操作時磁盤驅動器模塊附近的周圍空氣最高溫度為30°C。 \n \n \n The above is just the start of the specification, but as more is known (specified), the designer can proceed. The design can proceed because the designer now has some idea when they have been successful, that is, if the design passes testing designed to determine whether or not the design has passed the specification. In this “Scenario,” minimal input, the specification will certainly be added to, and many people involved with the project will need to review and approve the specification. However, the designer can, at least, proceed to make some progress or show some design options. \n 以上僅僅是本規範的開始，但正如已知的更多內容，設計人員可以繼續進行。之所以可以繼續進行設計，是因為設計者現在已經對成功有了一些想法，也就是說，設計是否通過了旨在確定設計是否通過規格的測試。在此“方案”中，只需最少的輸入，就肯定會添加規範，並且與該項目有關的許多人都需要審閱並批准該規範。 但是，設計者至少可以繼續取得一些進展或顯示一些設計選項。 \n • Scenario #2: A Complete Specification •方案2：完整規範 This specification describes in detail all of the requirements of the mechanical design.It would include: \n 本規範詳細描述了機械設計的所有要求，其中包括： \n \n Product description \n 產品描述 \n Product financials \n 產品財務 \n Product scheduling \n 產品排程 \n \n It would include in its design requirements such needed detail as: \n 它將在其設計要求中包括以下所需的詳細信息： \n \n Module to plug directly into backplane for power and signal requirements \n 直接插入背板的模塊可滿足電源和信號要求 \n Module to slide on a nonmetallic surface for ease of entry/exit \n \n 可在非金屬表面上滑動的模塊，易於進入/退出 \n \n （加上一整套其他要求，包括環境，人因工程，電氣接口，機構認可，所需測試等） \n \n \n • Scenario #3: A Working Specification \n •方案3：工作規範 \n This specification is (by far) the most common specification that the designer is adhering to. The specification’s completeness is somewhere between the “Complete” and the “Nonexistent” (beginning) specifications (Scenarios 1 and 2). With the working specification, the project manager usually has some idea of the design con- straints, but all aspects have not fully been vetted out. The specification is now under “change control,” that is, it is being updated fairly often in the beginning phases of the project, and any changes or additions are being reviewed by the proj- ect personnel with signature responsibility. As the project matures, major changes are under extremely tight scrutiny as these changes can greatly affect project com- pletion dates and milestones along the way. 該規範是（到目前為止）設計人員最常用的規範。\n堅持。對於工作規範，項目經理通常對設計約束有一定的了解，但尚未全面審查所有方面。 該規範處於“變更控制”之下，在項目的開始階段就經常對其進行更新，並且任何變更或增補都由項目負責人簽名。 隨著項目的成熟，對主要更改進行嚴格的審查，因為這些更改會極大地影響項目的完成日期和里程碑。 \n 1.3.2 Delivery on Time to Project Schedule \n 1-3-2 準時按計劃進度交付 \n Various schedules are prepared during a project. Each (approved by the project team) schedule is a “snapshot” of what the current project schedule is to be. The first schedule of importance would be the schedule that is used to justify the project. This schedule would be the one that is being used to be the “net present value” (NPV) of the project. This NPV project schedule would include best estimates of: 在項目期間準備各種時間表。每個（由項目團隊批准的）進度表都是當前項目進度表的“快照”。首先 重要進度表將是用於證明項目合理性的進度表。該進度表將被用作項目的“淨現值”（NVP）。 該NPV項目進度表將包括以下方面的最佳估計： \n \n Person resources needed to finish the project (by a given date) \n 完成項目所需的人力資源（在交付日期之前） \n Capital resources needed to finish the project (by a given date) \n 完成項目所需的資金（在交付日期之前） \n Expected sales of product and at what price sold (if product sold by a given date) \n \n 產品的預期銷售額以及以什麼價格售出（如果在交付日期之前售出產品） \n \n Expected cost of sales of product (if product sold by a given date) \n 產品的預期銷售成本（如果在給定日期之前銷售產品） \n \n Thus, there is an expected “value” that the project has if that project is completed by its expected date which is the date that the schedule presently states. \n 因此，如果該項目在其預期日期（即進度表當前指出的日期）之前完成，則該項目具有預期的“價值”。 However, various considerations can change during the course of a project.  They can be: 但是，在項目過程中可能會改變各種注意事項，它們可能是: \n \n Technical issue arises that changes implementation of original design. \n \n 出現了必須更改原始設計展現的技術問題。 \n \n Personnel working on project change (either particular members or the size of team). \n 負責項目變更了人員（特定成員或團隊規模） \n Scope of project is revised (either increased or decreased). \n 修訂項目範圍（增加或減少）。 \n Revisions to costing of various project components as project proceeds. \n \n 隨著項目的進行，修訂各種項目組成部分的成本。 \n \n \n As each (above) consideration changes, the project team will meet to determine its effect on the overall project schedule and see how it affects the NPV of the proj- ect. A determination is made to either continue the project with the revised NPV or discontinue the project. Usually, as the length of a project is extended, there would be more expenses associated with that extension, and the NPV would be lowered. 隨著每個（以上）考慮因素的變化，項目團隊將開會確定其對整個項目進度的影響。\n做出決定以修訂後的NPV繼續該項目或中止該項目。 通常，隨著項目時間的延長，與該擴展相關的費用會更多，並且淨現值會降低。 \n Getting back to determining “success” as “delivering on-time to project sched- ule,” each project can analyze if they have indeed delivered that project “on-time to project schedule” by dissecting the causes for any extension of the time schedule. If the extensions are deemed “reasonable” and “justified,” then the project could be considered to be a success in this regard. 每個項目都可以通過剖析任何延長時間進度表的原因來分析它們是否按時交付了該項目。 如果擴展被認為是“合理的”和“合理的”，則該項目在這方面可以被認為是成功的。 \n 1.3.3 Delivery at Predicted Costs \n 1-3-3按預期成本交貨 \n Just as the schedule can change (in Sect. 1.3.2, above), the costs of either the prod- uct or the costs needed to design and deliver that product can change. Costs can change due to the following: 正如時間表可以更改一樣，設計和交付該產品所需的成本中的任一個產品的成本也可以更改。 成本可能會因以下原因而發生變化； \n \n Personnel resources needed to finish the project are revised. \n \n 修改了完成項目所需的人力資源。 \n \n \n \n Capital resources needed to finish the project are revised. \n 修改了完成項目所需的資金。 \n Expected cost of sales of product are revised. \n 產品的預期銷售成本已修訂。 \n \n If the changes to the project costs are determined “reasonable and “justified,” then the project could be considered successful from a cost standpoint. \n 如果確定項目成本的更改是“合理且合理的”，則從成本角度來看，該項目可以被認為是成功的。 \n Certainly, all three of the above factors (specification, time, and cost) need analy- sis during and after the project. \n 當然，以上三個因素（規格，時間和成本）都需要在項目進行期間和之後進行分析。 \n 1.4 Sketching Versus Detailing \n 1-4 草圖與細節 \n An EPE Designer must know when to shift between either of these modes: \n EPE設計人員必須知道何時在以下兩種模式之間切換： \n \n Sketching or brainstorming: this is a very quick ideation phase. It is usually done with a pencil. Nothing is detailed – it all seems to fit perfectly on these sketches. Scale isn’t really impor-tant; that will come a bit later. Feedback from others is attained. Speed is the main focus here; the designer is getting major choices on paper so that plusses\xa0and minuses of several choices can be decided。 \n \n •素描或集思廣益： 這是一個非常快速的構思階段。通常可以完成用鉛筆，並且沒有詳細說明， 規模並不是很重要。 \n 速度是這裡的重點。 Detailing: that is, providing “some amount” of detail. The amount of detail needed is dependant on the criticality or the uniqueness of the situation. In the sketch (phase), everything works, you have “glossed over” the items that may be stumbling blocks. You have done that to speed the overall design process, but now in the detail mode, more critical analysis is needed. While in “detail mode,” you work out (more) exactly some critical parts of the design, the parts that a designer recognizes as “deal breakers.” Details usually need CAD design to pro- vide real geometry and scale to the situation. Again, design reviews can be criti- cal to continue quickly down agreed-to design paths. \n 詳圖：即提供一定訊息量的詳圖。所需的詳細信息量取決於情況的嚴重性或獨特性。\n草圖（階段），看似一切正常，但事實上“忽略了”有可能發生錯誤。您這樣做是為了加快整個設計過程，但是\n現在，在詳細信息模式下，需要進行更嚴格的分析。 在“詳細模式”下，可以準確地設計出設計中的一些關鍵部分，即設計師認為是“交易突破者”的部分。 細節通常需要CAD設計才能提供真實的幾何圖形並根據情況進行縮放。 同樣，設計審查可能至關重要，可以迅速沿著同意的設計道路繼續前進。 \n 1.5 Design Reviews \n 1-5設計評論 \n Some General Comments About Design Reviews:\xa0 關於設計評論的一些一般性評論 \n 1. Take attendance, and note who is at the meeting. \n 1.參加會議，並註意參加會議的人。 2. Take (at least, cursorily) notes on all of the (relevant) issues that are raised. 2.記下提出的所有（相關）問題。 3. Possibly invite someone to the design review, who is not familiar with the basic design. They could be someone from a different function or department within the company. Sometimes, this person can add a different “take” on the issues as they are viewing them from a different perspective. 3. 邀請不熟悉基本設計的人參加設計審查。有時，這些人可以在問題上提供不同的“觀點”。 \n 4. Briefly review the main goals of the design. 4. 簡要回顧設計的主要目標。 \n 5. Some ideas brought up will already have been thought out by the designer; that’s fine, and just go quickly thru your rationale. 5.設計師已經考慮了提出的一些想法，請按照自己的理論繼續進行。 6. Some ideas may seem (initially) to be not valuable or not “on point.” Just note them and move on; it’s possible that you may see the value at a later time. 6.有 些想法似乎沒有價值或不切實際。只是注意到他們繼續進行；以後可能會看到該值。 7. You will get the value out of the design review – it always happens if you are “open” to it. Thank all of those involved as they have given you their insight and experience. \n 7.你將從設計評審中獲得價值–如果你對評論是開放性的，它就會永遠發生。 感謝所有相關人員，因為他們為您提供了見識和經驗。 8.Publish your notes on the meeting to those that were in attendance and to the entire project team. This will log further action to be taken by you and others to make progress with the design. Ask for further comments from your Design Review Team. 8.將 您在會議上的筆記發布給與會人員和整個項目團隊。這將記錄您和其他人要採取的進一步行動， 在設計上取得進展。 要求您的設計審查團隊提供進一步的意見。 \n 1.6 Communication \n 1-6 溝通 \n Communication is a necessity for a design to be successful. That sentence stands by itself but is worthy of a more full discussion. \n 溝通是設計成功的必要條件。該句話本身是正確的，但值得進行更充分的討論。 \n 1.6.1 Purpose of Communication \n 1-6-1溝通目的 \n The purpose of communication is to convey information about the design. This is required as that information supplies answers to questions, documents the design as it presently exists, and documents the evolution of the design. Communication can be written, filmed, or verbal. Written documentation takes the form of: \n 交流的目的是傳達有關設計的信息。之所以需要這樣做，是因為信息可以提供問題的答案，記錄當前存在的設計以及記錄設計的演變。交流可以書面，影片或口頭形式進行。書面文件的形式為： \n \n Specifications \n 技術指標 \n Drawings \n 圖紙 \n Project meeting notes/schedules \n 項目會議記錄/時間表 \n Notes in notebooks \n 筆記本中的筆記 \n Emails specific to a project or program (any digital communication) \n \n 特定於項目或程序的電子郵件（任何數字通信） \n \n \n Film documentation are camera recordings of project proceedings, tests, and events. Verbal communications are any of the words spoken to move the project into a completed state. All important verbal communication needs to be put into written form so that all members of the project can review those communications. 影片文檔是項目過程，測試和事件的攝像機記錄。口頭交流是使項目進入完成狀態的任何語言。 所有重要的口頭交流都必須以書面形式進行表格，以便所有成員都可以查看這些通訊。 \n 1.6.2 Value of Communication \n 1-6-2溝通的價值 \n Great communication will make a project more successful. Great communication has the following attributes: \n 良好的溝通將使項目更加成功。良好的溝通具有以下特性: \n \n Accurate – the information is true and backed by testing/documentation. \n 準確–信息真實，並有測試/文檔證實 \n Concise – the information is straight to the point without excessive words. \n 簡潔–信息直截了當，沒有過多的措辭。 \n Distributed – to all those that need the information. \n 分佈式–面向所有需要信息的人。 \n Speedy – the information is quickly disseminated. \n 快速-信息迅速傳播 \n Offers solutions – proposing a solution to problems invigorates the solution process. \n 提供解決方案–針對問題提出解決方案，可以加快解決過程。 \n \n 1.6.3 Links in the Communication Chain \n 1-6-3通訊的連結 \n One of the goals of communication is to get that information to the people who need the information. Email distributions are easy to create along with document control distribu- tions. The EPE Designer should decide among all of the people involved on theproject team, who is critical to making the decisions that need to be made and who is copied for status purposes only. \n 交流的目標之一是將信息傳遞給需要的人信息。 電子郵件分發和文檔控制分發很容易創建。  EPE設計師應該在項目團隊的所有相關人員之間做出決定。 \n 1.7 Engineering Economy \n 1-7工程經濟 \n \xa0“What something costs” is a paramount consideration in just about any endeavor. In many product designs, it will be one of the main causes of product success or failure. specification, but for now, let’s begin the discussion stating that the EPE Designer must be capable of coming up with cost information and some break-even analyses.\xa0 it is stated that “If an engi-neering project is to succeed in meeting human needs, it must be designed and oper- ated in a way that promises both physical and economic feasibility.”As cost is so important, the designer needs to: \n \xa0“花什麼錢”是至關重要的幾乎所有努力都需要考慮。在許多產品設計中，它將成為產品成功或失敗的主要原因之一。但是現在，讓我們開始討論，指出EPE設計人員必須能夠提供成本信息和一些收支平衡分析。“如果一個工程項目要成功滿足人類的需求，就必須以保證物理和經濟可行性的方式設計和運行該項目。”由於成本如此重要，因此設計者需要： \n 1.Be aware of what the cost goals (for both the individual part and the complete assembly) are for the design. \n 1.注意設計的成本目標（對於單個零件還是整個組件）。 2.Be aware of what the material and process options are for the part being designed. 2. 注意所設計零件的材料和加工選擇 3.Propose solutions to materials and processes that are appropriate to where the prod- uct is in its overall life cycle. 3. 為適合產品整個生命週期的材料和過程提出解決方案。 4.Provide cost information, based on the appropriate quantities being ordered, back to the project team so that this important metric is always well-known. 4. 根據訂購的適當數量將成本信息提供給項目團隊，以使這一重要指標是眾所皆知的 Let’s get into an example. As shown in Chap. 4, the choice on whether to “tool” a part is mentioned. This type of problem can be analyzed by choosing between: (200 parts per month needed in each case) 讓我們來看一個例子。如第一章所示。 在圖4中，提到了是否“工具化”零件的選擇。 可以通過以下方式分析這種類型的問題：（每種情況下每月需要200個零件) \n \n Choice A: un-tooled part cost is $5.00 from Vendor A \n \n 選擇A：供應商A的非工具零件成本為5.00美元 \n \n Choice B: design a tooled part and have Vendor T make the tool. Estimate of costs: tooled part cost is $1.00 and tooling cost is $4000.00 \n \n 選擇B：設計工具零件，並讓供應商T製作工具。 \n 成本估算：加工零件成本為$ 1.00，加工工具成本為$ 4000.00 \n \n \n At what time period will the tooling cost and new part cost be equal to the old part cost? This is what is known as the “break-even point.” Answer: this is easily calculated or graphed (see Fig. 1.1): \n 在什麼時候模具成本和新零件成本將等於舊的部分成本？ 這就是所謂的“收支平衡點”。 答案：這很容易計算或繪製（見圖1.1）： \n ChoiceB $ = × ( ) 1 / / part 200 parts month m ×5 onth $ + = 4000 $5000 \n After 5 months, the total cost will be less for Choice B, the tooled part. Clearly, if the product is produced for 5 months or more, we would choose to tool the part. \n 5個月後，選擇B的總成本將減少。 顯然，如果產品生產了5個月或更長時間，我們將選擇 B選項。 However, the above “economic reality” actually has some complications. Choice B costs (above) did not include: 但是，上述“經濟現實”實際上有一些複雜性。上述選擇B的成本不包括： 1. The cost to design and document the tooled part. 1.設計和記錄工具零件的成本 2. The cost of bidding the tool and deciding that Vendor T was the best tool vendor. \n 2.競標工具並確定供應商T是最佳工具供應商的成本。 3. The cost of prototyping the tooled part (before approving the drawing of tooled part). 3.製作工具零件的原型成本 4. The cost of getting a first article of the tooled part approved (we’ll assume here that the initial first article is approved – hopefully, no tool modification is required as this would be an additional cost). 4.批准工具零件的第一篇文章的費用（我們在此假設第一篇文章已獲得批准-希望不需要修改工具，因為這將是額外的費用） 5. The cost of testing the tooled part (as a replacement for the un-tooled part). 5.測試工具零件的成本 6. The cost of “using up” the un-tooled part and switching over to the tooled part. \n 6.“用完”未使用工具的零件並切換到使用工具的零件的成本。 7. The cost of the money for the tooling. That is, the $4000 cost of the tooling is actually worth more than $4000. Let me explain. 7.模具費用。也就是說，工具的成本為$ 4000 實際價值超過$ 4000。以下進行解釋。 If the $4000 was not going to be given to the tool maker vendor, it would be an earning interest for the corporation. A “simple interest” calculation would have the interest earned on $4000 be (at 2%/year): $4000 × 0.02/12 months × 5 months (the break-even time) = $33. But, the question here may be: \n 如果不將4000美元提供給工具製造商，則對公司而言將是賺錢的興趣。  “簡單利息”計算將獲得4000美元的利息（按2％/年計算）：4000美元×0.02 / 12個月×5個月（即收支平衡時間）= 33美元。 但是，這裡的問題可能是： What could the corporation do with the $4000 that would be better than just creating the $33 simple interest? Perhaps they could invest it into the development of a new product that could generate much more money or spend it on another tool on a different project that would bring in more money. Yes, this isn’t simple. \n 公司可以用$4000做什麼呢？ \n 創造33美元的單利嗎？也許他們可以將其投資到開發項目中，可能產生更多收益或將其花費在其他工具上的新產品\n在另一個可以帶來更多收益的項目上。這並不簡單。 In the seven items above, the cost to design and document the tooled part is not a trivial amount of money. If it takes 1 week to design, document, and prototype, the tooled part could cost the corporation $1000 for the designer’s time (say, at $1000/ week salary). \n 在上面的七個項目中，設計和記錄工具零件的成本不是微不足道的錢。如果需要花一周的時間來設計，記錄和原型，則\n工具零件可能會使公司在設計者的時間中花費1000美元（例如，1000美元/週工資）。 Most corporations will not “factor in” the above seven items in their “break- even” analysis, but it is worthy of consideration in some circumstances. 大多數公司在“盈虧平衡”分析中不會“考慮”上述七個項目，但是在某些情況下值得考慮。 Another term that a designer will need to be familiar with is “return on invest- ment” or abbreviated as ROI. This is similar to the “break-even point” as stated earlier, but that the question is posed slightly differently. In the same problem as above (Choices A and B), the question would be posed as: \n 設計師需要熟悉的另一個術語是“投資回報率”或簡稱為ROI。這類似於前面所述的“收支平衡點”，但提出的問題略有不同。 在同樣的問題以上（選擇A和B），問題將提出為： \n What is the ROI on a $4000 tool to bring down the piece price of a $5 part? Once the new tooled piece price is known ($1) and the numbers are ordered (say, per month = 200 parts/month), then the ROI = 5 months. So, basically the return on investment of $4000 will be 5 months. \n 4000美元的工具降低5美元零件的單價的投資回報率是多少？\n已知新的加工件價格（$ 1）並訂購了數量（例如，每月= 200個零件/月），則ROI = 5個月。因此，基本上$ 4000的投資回報為5個月。 \n \xa0 \n \n \n \n "tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"> What is the ROI on a $4000 tool to bring down the piece price of a $5 part? Once the new tooled piece price is known ($1) and the numbers are ordered (say, per month = 200 parts/month), then the ROI = 5 months. So, basically the return on investment of $4000 will be 5 months. \n 4000美元的工具降低5美元零件的單價的投資回報率是多少？\n已知新的加工件價格（$ 1）並訂購了數量（例如，每月= 200個零件/月），則ROI = 5個月。因此，基本上$ 4000的投資回報為5個月。 \n \xa0 \n \n \n \n i> "tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"> What is the ROI on a $4000 tool to bring down the piece price of a $5 part? Once the new tooled piece price is known ($1) and the numbers are ordered (say, per month = 200 parts/month), then the ROI = 5 months. So, basically the return on investment of $4000 will be 5 months. \n 4000美元的工具降低5美元零件的單價的投資回報率是多少？\n已知新的加工件價格（$ 1）並訂購了數量（例如，每月= 200個零件/月），則ROI = 5個月。因此，基本上$ 4000的投資回報為5個月。 \n \xa0 \n \n \n', 'tags': '', 'url': '機械設計過程.html'}]};